<?xml version="1.0"?>
<doc>
    <assembly>
        <name>KimonoCore.Mac</name>
    </assembly>
    <members>
        <member name="T:KimonoCore.Mac.KimonoDesignSurface">
             <summary>
             The Kimono Design Surface is a Xamarin.Mac specific editing surface that allows the
             user to modify a given <c>KimonoPortfolio</c> and the collection of <c>KimonoSketches</c>
             that it maintains.
             </summary>
            </member>
        <member name="F:KimonoCore.Mac.KimonoDesignSurface._portfolio">
             <summary>
             The portfolio currently being worked on.
             </summary>
            </member>
        <member name="F:KimonoCore.Mac.KimonoDesignSurface.UndoHandler">
             <summary>
             The <c>KimonoUndoHandler</c> that handles undo and redo events for the 
             Design Surface.
             </summary>
            </member>
        <member name="P:KimonoCore.Mac.KimonoDesignSurface.CanUndo">
             <summary>
             Gets a value indicating whether the user can undo their last action.
             </summary>
             <value><c>true</c> if can undo; otherwise, <c>false</c>.</value>
            </member>
        <member name="P:KimonoCore.Mac.KimonoDesignSurface.CanRedo">
             <summary>
             Gets a value indicating whether the user can redo their last action.
             </summary>
             <value><c>true</c> if can redo; otherwise, <c>false</c>.</value>
            </member>
        <member name="P:KimonoCore.Mac.KimonoDesignSurface.Portfolio">
             <summary>
             Gets or sets the portfolio currently being worked on.
             </summary>
             <value>The <c>KimonoPortfolio</c>.</value>
            </member>
        <member name="P:KimonoCore.Mac.KimonoDesignSurface.SelectedSketch">
             <summary>
             Gets or sets the selected sketch.
             </summary>
             <value>The selected <c>KimonoSketch</c>.</value>
            </member>
        <member name="P:KimonoCore.Mac.KimonoDesignSurface.SelectedShape">
             <summary>
             Gets or sets the selected shape.
             </summary>
             <value>The selected <c>KimonoShape</c>.</value>
            </member>
        <member name="P:KimonoCore.Mac.KimonoDesignSurface.DeeplySelectedShape">
             <summary>
             Gets the deeply selected shape.
             </summary>
             <value>The deeply selected <c>KimonoShape</c>.</value>
            </member>
        <member name="P:KimonoCore.Mac.KimonoDesignSurface.DeeplySelectedGroup">
             <summary>
             Gets the deeply selected group.
             </summary>
             <value>The deeply selected <c>KimonoGroup</c>.</value>
            </member>
        <member name="P:KimonoCore.Mac.KimonoDesignSurface.Tool">
             <summary>
             Gets or sets the tool.
             </summary>
             <value>The current <c>KimonoTool</c>.</value>
            </member>
        <member name="M:KimonoCore.Mac.KimonoDesignSurface.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:KimonoCore.Mac.KimonoDesignSurface" /> class.
             </summary>
            </member>
        <member name="M:KimonoCore.Mac.KimonoDesignSurface.#ctor(System.IntPtr)">
             <summary>
             Initializes a new instance of the <see cref="T:KimonoCore.Mac.KimonoDesignSurface" /> class.
             </summary>
             <param name="handle">Handle.</param>
            </member>
        <member name="M:KimonoCore.Mac.KimonoDesignSurface.#ctor(CoreGraphics.CGRect)">
             <summary>
             Initializes a new instance of the <see cref="T:KimonoCore.Mac.KimonoDesignSurface" /> class.
             </summary>
             <param name="frameRect">Frame rect.</param>
            </member>
        <member name="M:KimonoCore.Mac.KimonoDesignSurface.#ctor(Foundation.NSCoder)">
             <summary>
             Initializes a new instance of the <see cref="T:KimonoCore.Mac.KimonoDesignSurface" /> class.
             </summary>
             <param name="coder">Coder.</param>
            </member>
        <member name="M:KimonoCore.Mac.KimonoDesignSurface.ConvertToCanvasPoint(AppKit.NSEvent)">
             <summary>
             Converts a raw macOS mouse event point into the coordinates of the currently selected
             sketch's Design Surface.
             </summary>
             <returns>An <c>SKPoint</c> adjusted to the sketch's coordinate system.</returns>
             <param name="theEvent">The raw mouse <c>NSEvent</c>.</param>
            </member>
        <member name="M:KimonoCore.Mac.KimonoDesignSurface.WireUpSketchEvents(KimonoCore.KimonoSketch)">
             <summary>
             Wires up sketch events to this Design Surface.
             </summary>
             <param name="sketch">The <c>KimonoStech</c> to wire events for.</param>
            </member>
        <member name="M:KimonoCore.Mac.KimonoDesignSurface.UnwireSketchEvents(KimonoCore.KimonoSketch)">
             <summary>
             Unwires the sketch events from this Design Surface.
             </summary>
             <param name="sketch">The <c>KimonoSketch</c> to remove events from.</param>
            </member>
        <member name="M:KimonoCore.Mac.KimonoDesignSurface.HandleSketchChanging(KimonoCore.KimonoSketch)">
             <summary>
             Handles the currently selected sketch changing.
             </summary>
             <param name="sketch">The new <c>KimonoSketch</c> being selected.</param>
            </member>
        <member name="M:KimonoCore.Mac.KimonoDesignSurface.WireupPortfolioEvents">
             <summary>
             Wireups the portfolio events to this Design Surface.
             </summary>
            </member>
        <member name="M:KimonoCore.Mac.KimonoDesignSurface.UnwirePortfolioEvents">
             <summary>
             Unwires the portfolio events from this Design Surface.
             </summary>
            </member>
        <member name="M:KimonoCore.Mac.KimonoDesignSurface.Initialize">
             <summary>
             Initialize this instance.
             </summary>
            </member>
        <member name="M:KimonoCore.Mac.KimonoDesignSurface.RefreshView">
             <summary>
             Refreshs the Design Surface's view by redrawing the currently selected <c>KimonoSketch</c>.
             </summary>
            </member>
        <member name="M:KimonoCore.Mac.KimonoDesignSurface.SaveUndoPoint">
             <summary>
             Saves a new undo point.
             </summary>
            </member>
        <member name="M:KimonoCore.Mac.KimonoDesignSurface.ReplaceUndoPoint">
             <summary>
             Replaces the last undo point.
             </summary>
            </member>
        <member name="M:KimonoCore.Mac.KimonoDesignSurface.UndoChange">
             <summary>
             Undoes the last change.
             </summary>
            </member>
        <member name="M:KimonoCore.Mac.KimonoDesignSurface.RedoChange">
             <summary>
             Redoes the last change.
             </summary>
            </member>
        <member name="M:KimonoCore.Mac.KimonoDesignSurface.DuplicateSelectedShape">
             <summary>
             Duplicates the selected shape.
             </summary>
            </member>
        <member name="M:KimonoCore.Mac.KimonoDesignSurface.DeleteSelectedShape">
             <summary>
             Deletes the selected shape.
             </summary>
            </member>
        <member name="M:KimonoCore.Mac.KimonoDesignSurface.AcceptsFirstResponder">
             <summary>
             Acceptses the first responder.
             </summary>
             <returns><c>true</c>, if first responder was accepted, <c>false</c> otherwise.</returns>
            </member>
        <member name="M:KimonoCore.Mac.KimonoDesignSurface.MouseDown(AppKit.NSEvent)">
             <summary>
             Handles the user clicking the mouse
             </summary>
             <param name="theEvent">The <c>NSEvent</c> representing the mouse down.</param>
            </member>
        <member name="M:KimonoCore.Mac.KimonoDesignSurface.MouseDragged(AppKit.NSEvent)">
             <summary>
             Handles the user dragging the mouse.
             </summary>
             <param name="theEvent">The <c>NSEvent</c> representing the mouse drag.</param>
            </member>
        <member name="M:KimonoCore.Mac.KimonoDesignSurface.MouseMoved(AppKit.NSEvent)">
             <summary>
             Handles the user moving the mouse.
             </summary>
             <param name="theEvent">The <c>NSEvent</c> representing the mouse move.</param>
            </member>
        <member name="M:KimonoCore.Mac.KimonoDesignSurface.MouseUp(AppKit.NSEvent)">
             <summary>
             Handles the user releasing a mouse button.
             </summary>
             <param name="theEvent">The <c>NSEvent</c> representing the mouse up.</param>
            </member>
        <member name="M:KimonoCore.Mac.KimonoDesignSurface.Undo(Foundation.NSObject)">
             <summary>
             Udoes the last change.
             </summary>
             <param name="sender">Sender.</param>
            </member>
        <member name="M:KimonoCore.Mac.KimonoDesignSurface.Redo(Foundation.NSObject)">
             <summary>
             Redoes the last change.
             </summary>
             <param name="sender">Sender.</param>
            </member>
        <member name="E:KimonoCore.Mac.KimonoDesignSurface.ReloadUI">
             <summary>
             Occurs when the user interface needs to be fully reloaded.
             </summary>
            </member>
        <member name="E:KimonoCore.Mac.KimonoDesignSurface.SketchSizeChanged">
             <summary>
             Occurs when sketch size changed.
             </summary>
            </member>
        <member name="E:KimonoCore.Mac.KimonoDesignSurface.SketchesModified">
             <summary>
             Occurs when sketches collection is modified.
             </summary>
            </member>
        <member name="E:KimonoCore.Mac.KimonoDesignSurface.SketchModified">
             <summary>
             Occurs when a sketch is modified.
             </summary>
            </member>
        <member name="E:KimonoCore.Mac.KimonoDesignSurface.SelectedShapeModified">
             <summary>
             Occurs when the selected shape is modified.
             </summary>
            </member>
        <member name="E:KimonoCore.Mac.KimonoDesignSurface.SelectionChanged">
             <summary>
             Occurs when selection changed.
             </summary>
            </member>
        <member name="E:KimonoCore.Mac.KimonoDesignSurface.ToolChanged">
             <summary>
             Occurs when tool changed.
             </summary>
            </member>
        <member name="E:KimonoCore.Mac.KimonoDesignSurface.StylesModified">
             <summary>
             Occurs when styles collection is modified.
             </summary>
            </member>
        <member name="E:KimonoCore.Mac.KimonoDesignSurface.ColorsModified">
             <summary>
             Occurs when colors collection is modified.
             </summary>
            </member>
        <member name="E:KimonoCore.Mac.KimonoDesignSurface.UndoStateChanged">
             <summary>
             Occurs when undo state changed.
             </summary>
            </member>
        <member name="E:KimonoCore.Mac.KimonoDesignSurface.GradientsModified">
             <summary>
             Occurs when gradients collection is modified.
             </summary>
            </member>
        <member name="M:KimonoCore.Mac.KimonoDesignSurface.RaiseGradientsModified(KimonoCore.KimonoGradient)">
             <summary>
             Raises the gradients modified event.
             </summary>
             <param name="gradient">The <c>KimonoGradient</c> that was modified.</param>
            </member>
        <member name="M:KimonoCore.Mac.KimonoDesignSurface.RaiseReloadUI">
             <summary>
             Raises the reload user interface event.
             </summary>
            </member>
        <member name="M:KimonoCore.Mac.KimonoDesignSurface.RaiseSketchSizeChanged">
             <summary>
             Raises the sketch size changed event.
             </summary>
            </member>
        <member name="M:KimonoCore.Mac.KimonoDesignSurface.RaiseSketchesModified">
             <summary>
             Raises the sketches modified event.
             </summary>
            </member>
        <member name="M:KimonoCore.Mac.KimonoDesignSurface.RaiseSketchModified">
             <summary>
             Raises the sketch modified event.
             </summary>
            </member>
        <member name="M:KimonoCore.Mac.KimonoDesignSurface.RaiseSelectedShapeModified">
             <summary>
             Raises the selected shape modified event.
             </summary>
            </member>
        <member name="M:KimonoCore.Mac.KimonoDesignSurface.RaiseSelectionChanged(KimonoCore.KimonoShape)">
             <summary>
             Raises the selection changed event.
             </summary>
             <param name="selected">The new <c>KimonoShape</c> selected.</param>
            </member>
        <member name="M:KimonoCore.Mac.KimonoDesignSurface.RaiseToolChanged(KimonoCore.KimonoTool)">
             <summary>
             Raises the tool changed event.
             </summary>
             <param name="tool">The new <c>KimonoTool</c> selected.</param>
            </member>
        <member name="M:KimonoCore.Mac.KimonoDesignSurface.RaiseStylesModified(KimonoCore.KimonoStyle)">
             <summary>
             Raises the styles modified event.
             </summary>
             <param name="style">The <c>KimonoStyle</c> that was modified.</param>
            </member>
        <member name="M:KimonoCore.Mac.KimonoDesignSurface.RaiseColorsModified(KimonoCore.KimonoColor)">
             <summary>
             Raises the colors modified event.
             </summary>
             <param name="color">The <c>KimonoColor</c> that was modified.</param>
            </member>
        <member name="M:KimonoCore.Mac.KimonoDesignSurface.RaiseUndoStateChanged">
             <summary>
             Raises the undo state changed event.
             </summary>
            </member>
        <member name="T:KimonoCore.Mac.KimonoGradientDesignBar">
             <summary>
             The Kimono Gradient Design Bar handles the control points that a user uses to graphically
             design a gradient in the editor.
             </summary>
            </member>
        <member name="P:KimonoCore.Mac.KimonoGradientDesignBar.Gradient">
             <summary>
             Gets or sets the gradient.
             </summary>
             <value>The gradient.</value>
            </member>
        <member name="M:KimonoCore.Mac.KimonoGradientDesignBar.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:KimonoCore.Mac.KimonoGradientDesignBar" /> class.
             </summary>
            </member>
        <member name="M:KimonoCore.Mac.KimonoGradientDesignBar.#ctor(System.IntPtr)">
             <summary>
             Initializes a new instance of the <see cref="T:KimonoCore.Mac.KimonoGradientDesignBar" /> class.
             </summary>
             <param name="handle">Handle.</param>
            </member>
        <member name="M:KimonoCore.Mac.KimonoGradientDesignBar.#ctor(CoreGraphics.CGRect)">
             <summary>
             Initializes a new instance of the <see cref="T:KimonoCore.Mac.KimonoGradientDesignBar" /> class.
             </summary>
             <param name="frameRect">Frame rect.</param>
            </member>
        <member name="M:KimonoCore.Mac.KimonoGradientDesignBar.#ctor(Foundation.NSCoder)">
             <summary>
             Initializes a new instance of the <see cref="T:KimonoCore.Mac.KimonoGradientDesignBar" /> class.
             </summary>
             <param name="coder">Coder.</param>
            </member>
        <member name="M:KimonoCore.Mac.KimonoGradientDesignBar.ConvertToCanvasPoint(AppKit.NSEvent)">
             <summary>
             Converts a raw macOS mouse event point into the coordinates of the currently selected
             bar's Design Surface.
             </summary>
             <returns>An <c>SKPoint</c> adjusted to the bar's coordinate system.</returns>
             <param name="theEvent">The raw mouse <c>NSEvent</c>.</param>
            </member>
        <member name="M:KimonoCore.Mac.KimonoGradientDesignBar.HandleGradientModified">
             <summary>
             Handles the gradient being modified.
             </summary>
            </member>
        <member name="M:KimonoCore.Mac.KimonoGradientDesignBar.RefreshView">
             <summary>
             Refreshs the view by redrawing the gradient design bar.
             </summary>
            </member>
        <member name="M:KimonoCore.Mac.KimonoGradientDesignBar.AcceptsFirstResponder">
             <summary>
             Acceptses the first responder.
             </summary>
             <returns><c>true</c>, if first responder was accepted, <c>false</c> otherwise.</returns>
            </member>
        <member name="M:KimonoCore.Mac.KimonoGradientDesignBar.MouseDown(AppKit.NSEvent)">
             <summary>
             Handles the user clicking the mouse
             </summary>
             <param name="theEvent">The <c>NSEvent</c> representing the mouse down.</param>
            </member>
        <member name="M:KimonoCore.Mac.KimonoGradientDesignBar.MouseDragged(AppKit.NSEvent)">
             <summary>
             Handles the user dragging the mouse.
             </summary>
             <param name="theEvent">The <c>NSEvent</c> representing the mouse drag.</param>
            </member>
        <member name="M:KimonoCore.Mac.KimonoGradientDesignBar.MouseMoved(AppKit.NSEvent)">
             <summary>
             Handles the user moving the mouse.
             </summary>
             <param name="theEvent">The <c>NSEvent</c> representing the mouse move.</param>
            </member>
        <member name="M:KimonoCore.Mac.KimonoGradientDesignBar.MouseUp(AppKit.NSEvent)">
             <summary>
             Handles the user releasing a mouse button.
             </summary>
             <param name="theEvent">The <c>NSEvent</c> representing the mouse up.</param>
            </member>
        <member name="E:KimonoCore.Mac.KimonoGradientDesignBar.HandleSelected">
             <summary>
             Occurs when a handle is selected.
             </summary>
            </member>
        <member name="M:KimonoCore.Mac.KimonoGradientDesignBar.RaiseHandleSelected(KimonoCore.KimonoHandle)">
             <summary>
             Raises the handle selected event.
             </summary>
             <param name="handle">Handle.</param>
            </member>
        <member name="T:KimonoCore.Mac.KimonoGradientDesignPreview">
             <summary>
             The Kimono Gradient Design Bar handles the control points that a user uses to graphically
             design a gradient in the editor.
             </summary>
            </member>
        <member name="P:KimonoCore.Mac.KimonoGradientDesignPreview.Gradient">
             <summary>
             Gets or sets the gradient.
             </summary>
             <value>The gradient.</value>
            </member>
        <member name="M:KimonoCore.Mac.KimonoGradientDesignPreview.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:KimonoCore.Mac.KimonoGradientDesignBar" /> class.
             </summary>
            </member>
        <member name="M:KimonoCore.Mac.KimonoGradientDesignPreview.#ctor(System.IntPtr)">
             <summary>
             Initializes a new instance of the <see cref="T:KimonoCore.Mac.KimonoGradientDesignBar" /> class.
             </summary>
             <param name="handle">Handle.</param>
            </member>
        <member name="M:KimonoCore.Mac.KimonoGradientDesignPreview.#ctor(CoreGraphics.CGRect)">
             <summary>
             Initializes a new instance of the <see cref="T:KimonoCore.Mac.KimonoGradientDesignBar" /> class.
             </summary>
             <param name="frameRect">Frame rect.</param>
            </member>
        <member name="M:KimonoCore.Mac.KimonoGradientDesignPreview.#ctor(Foundation.NSCoder)">
             <summary>
             Initializes a new instance of the <see cref="T:KimonoCore.Mac.KimonoGradientDesignBar" /> class.
             </summary>
             <param name="coder">Coder.</param>
            </member>
        <member name="M:KimonoCore.Mac.KimonoGradientDesignPreview.ConvertToCanvasPoint(AppKit.NSEvent)">
             <summary>
             Converts a raw macOS mouse event point into the coordinates of the currently selected
             bar's Design Surface.
             </summary>
             <returns>An <c>SKPoint</c> adjusted to the bar's coordinate system.</returns>
             <param name="theEvent">The raw mouse <c>NSEvent</c>.</param>
            </member>
        <member name="M:KimonoCore.Mac.KimonoGradientDesignPreview.HandleGradientModified">
             <summary>
             Handles the gradient being modified.
             </summary>
            </member>
        <member name="M:KimonoCore.Mac.KimonoGradientDesignPreview.RefreshView">
             <summary>
             Refreshs the view by redrawing the gradient design bar.
             </summary>
            </member>
        <member name="M:KimonoCore.Mac.KimonoGradientDesignPreview.AcceptsFirstResponder">
             <summary>
             Acceptses the first responder.
             </summary>
             <returns><c>true</c>, if first responder was accepted, <c>false</c> otherwise.</returns>
            </member>
        <member name="M:KimonoCore.Mac.KimonoGradientDesignPreview.MouseDown(AppKit.NSEvent)">
             <summary>
             Handles the user clicking the mouse
             </summary>
             <param name="theEvent">The <c>NSEvent</c> representing the mouse down.</param>
            </member>
        <member name="M:KimonoCore.Mac.KimonoGradientDesignPreview.MouseDragged(AppKit.NSEvent)">
             <summary>
             Handles the user dragging the mouse.
             </summary>
             <param name="theEvent">The <c>NSEvent</c> representing the mouse drag.</param>
            </member>
        <member name="M:KimonoCore.Mac.KimonoGradientDesignPreview.MouseMoved(AppKit.NSEvent)">
             <summary>
             Handles the user moving the mouse.
             </summary>
             <param name="theEvent">The <c>NSEvent</c> representing the mouse move.</param>
            </member>
        <member name="M:KimonoCore.Mac.KimonoGradientDesignPreview.MouseUp(AppKit.NSEvent)">
             <summary>
             Handles the user releasing a mouse button.
             </summary>
             <param name="theEvent">The <c>NSEvent</c> representing the mouse up.</param>
            </member>
        <member name="E:KimonoCore.Mac.KimonoGradientDesignPreview.HandleSelected">
             <summary>
             Occurs when a handle is selected.
             </summary>
            </member>
        <member name="M:KimonoCore.Mac.KimonoGradientDesignPreview.RaiseGradientModified">
             <summary>
             Raises the gradient modified event.
             </summary>
            </member>
        <member name="E:KimonoCore.Mac.KimonoGradientDesignPreview.GradientModified">
             <summary>
             Occurs when the gradient is modified.
             </summary>
            </member>
        <member name="M:KimonoCore.Mac.KimonoGradientDesignPreview.RaiseHandleSelected(KimonoCore.KimonoHandle)">
             <summary>
             Raises the handle selected event.
             </summary>
             <param name="handle">Handle.</param>
            </member>
        <member name="T:KimonoCore.KimonoBounds">
             <summary>
             Defines the outter bounding box for a <c>KimonoShape</c> and contains the routines required
             to draw the bounds and the control handles as the user edits and moves the shape.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoBounds.Rect">
             <summary>
             The base <c>SkRect</c> that holds the internal bounds of the shape.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoBounds.PreviousCenter">
             <summary>
             Holds the previous center used in scaling operations.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoBounds.PreviousRect">
             <summary>
             Holds the previous rect used in scaling operations.
             </summary>
            </member>
        <member name="P:KimonoCore.KimonoBounds.State">
             <summary>
             Gets the current edit state of the <c>KimonoShape</c>.
             </summary>
             <value>The state as a <c>KimonoShapeState</c>.</value>
            </member>
        <member name="P:KimonoCore.KimonoBounds.UniqueID">
             <summary>
             Gets or sets the unique identifier.
             </summary>
             <value>The unique identifier.</value>
            </member>
        <member name="P:KimonoCore.KimonoBounds.Top">
             <summary>
             Gets or sets the top.
             </summary>
             <value>The top coord location.</value>
            </member>
        <member name="P:KimonoCore.KimonoBounds.Left">
             <summary>
             Gets or sets the left.
             </summary>
             <value>The left coord location.</value>
            </member>
        <member name="P:KimonoCore.KimonoBounds.Bottom">
             <summary>
             Gets or sets the bottom.
             </summary>
             <value>The bottom coord location.</value>
            </member>
        <member name="P:KimonoCore.KimonoBounds.Right">
             <summary>
             Gets or sets the right.
             </summary>
             <value>The right coord location.</value>
            </member>
        <member name="P:KimonoCore.KimonoBounds.Width">
             <summary>
             Gets or sets the width.
             </summary>
             <value>The width of the shape's bounding box.</value>
            </member>
        <member name="P:KimonoCore.KimonoBounds.Height">
             <summary>
             Gets or sets the height.
             </summary>
             <value>The height of the shape's bounding box.</value>
            </member>
        <member name="P:KimonoCore.KimonoBounds.HorizontalCenter">
             <summary>
             Gets the horizontal center.
             </summary>
             <value>The horizontal center.</value>
            </member>
        <member name="P:KimonoCore.KimonoBounds.VerticalCenter">
             <summary>
             Gets the vertical center.
             </summary>
             <value>The vertical center.</value>
            </member>
        <member name="P:KimonoCore.KimonoBounds.Center">
             <summary>
             Gets the center.
             </summary>
             <value>The center.</value>
            </member>
        <member name="P:KimonoCore.KimonoBounds.RotationDegrees">
             <summary>
             Gets or sets the rotation degrees.
             </summary>
             <value>The rotation degrees.</value>
            </member>
        <member name="P:KimonoCore.KimonoBounds.TopLeftHandle">
             <summary>
             Gets or sets the top left handle.
             </summary>
             <value>The top left handle.</value>
            </member>
        <member name="P:KimonoCore.KimonoBounds.TopHandle">
             <summary>
             Gets or sets the top handle.
             </summary>
             <value>The top handle.</value>
            </member>
        <member name="P:KimonoCore.KimonoBounds.TopRightHandle">
             <summary>
             Gets or sets the top right handle.
             </summary>
             <value>The top right handle.</value>
            </member>
        <member name="P:KimonoCore.KimonoBounds.RightHandle">
             <summary>
             Gets or sets the right handle.
             </summary>
             <value>The right handle.</value>
            </member>
        <member name="P:KimonoCore.KimonoBounds.BottomRightHandle">
             <summary>
             Gets or sets the bottom right handle.
             </summary>
             <value>The bottom right handle.</value>
            </member>
        <member name="P:KimonoCore.KimonoBounds.BottomHandle">
             <summary>
             Gets or sets the bottom handle.
             </summary>
             <value>The bottom handle.</value>
            </member>
        <member name="P:KimonoCore.KimonoBounds.BottomLeftHandle">
             <summary>
             Gets or sets the bottom left handle.
             </summary>
             <value>The bottom left handle.</value>
            </member>
        <member name="P:KimonoCore.KimonoBounds.LeftHandle">
             <summary>
             Gets or sets the left handle.
             </summary>
             <value>The left handle.</value>
            </member>
        <member name="P:KimonoCore.KimonoBounds.HitOffset">
             <summary>
             Gets or sets the hit offset.
             </summary>
             <value>The hit offset.</value>
            </member>
        <member name="P:KimonoCore.KimonoBounds.HitHandle">
             <summary>
             Gets or sets the hit handle.
             </summary>
             <value>The hit handle.</value>
            </member>
        <member name="M:KimonoCore.KimonoBounds.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:KimonoCore.KimonoBounds" /> class.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoBounds.#ctor(System.Single,System.Single,System.Single,System.Single)">
             <summary>
             Initializes a new instance of the <see cref="T:KimonoCore.KimonoBounds" /> class.
             </summary>
             <param name="left">Left.</param>
             <param name="top">Top.</param>
             <param name="right">Right.</param>
             <param name="bottom">Bottom.</param>
            </member>
        <member name="M:KimonoCore.KimonoBounds.#ctor(System.Single,System.Single,System.Single,System.Single,KimonoCore.KimonoShapeState)">
             <summary>
             Initializes a new instance of the <see cref="T:KimonoCore.KimonoBounds" /> class.
             </summary>
             <param name="left">Left.</param>
             <param name="top">Top.</param>
             <param name="right">Right.</param>
             <param name="bottom">Bottom.</param>
             <param name="state">State.</param>
            </member>
        <member name="M:KimonoCore.KimonoBounds.SavePreviousBounds">
             <summary>
             Saves the previous bounds.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoBounds.ValueBetween(System.Single,System.Single,System.Single)">
             <summary>
             Checks to see if the given value is between the two given points.
             </summary>
             <returns>The <see cref="T:System.Boolean" />.</returns>
             <param name="x">The x coordinate.</param>
             <param name="a">The alpha component.</param>
             <param name="b">The blue component.</param>
            </member>
        <member name="M:KimonoCore.KimonoBounds.AddHandles(KimonoCore.KimonoShapeState)">
             <summary>
             Adds the control handles to the bounds
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoBounds.RemoveHandles">
             <summary>
             Removes the control handles from the bounds.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoBounds.BoundsChanged">
             <summary>
             Updates the location of the edit handles when the bounds has been relocated or
             resized.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoBounds.Draw(SkiaSharp.SKCanvas)">
             <summary>
             Draws the bounding box and its edit handles into the given canvas
             </summary>
             <param name="canvas">Canvas.</param>
            </member>
        <member name="M:KimonoCore.KimonoBounds.Select">
             <summary>
             Puts the <c>KimonoShape</c> into the edit mode and creates the edit
             handles as required.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoBounds.PlaceUnderConstruction(System.Boolean)">
             <summary>
             Places the bounds under construction.
             </summary>
             <param name="needsHandles">If set to <c>true</c> needs handles.</param>
            </member>
        <member name="M:KimonoCore.KimonoBounds.StartGrouping">
             <summary>
             Starts the bounds grouping.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoBounds.Unselect">
             <summary>
             Unselects the <c>KimonoShape</c> as the current edit target and removes
             any edit handles.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoBounds.ChangeBounds(System.Single,System.Single,System.Single,System.Single)">
             <summary>
             Changes the bounds to match the given values.
             </summary>
             <param name="left">Left.</param>
             <param name="top">Top.</param>
             <param name="right">Right.</param>
             <param name="bottom">Bottom.</param>
            </member>
        <member name="M:KimonoCore.KimonoBounds.GrowBounds(SkiaSharp.SKPoint)">
             <summary>
             Adjusts the size of the bounds.
             </summary>
             <param name="point">The new size as a <c>SKPoint</c>.</param>
            </member>
        <member name="M:KimonoCore.KimonoBounds.MoveBounds(SkiaSharp.SKPoint)">
             <summary>
             Moves the bounds to the given point.
             </summary>
             <param name="point">The new top, left location as a <c>SKPoint</c>.</param>
            </member>
        <member name="M:KimonoCore.KimonoBounds.DragBounds(SkiaSharp.SKPoint)">
             <summary>
             Drags the bounds.
             </summary>
             <param name="point">Point.</param>
            </member>
        <member name="M:KimonoCore.KimonoBounds.PointInBound(SkiaSharp.SKPoint)">
             <summary>
             Test to see if the given point is inside of the current bounds
             </summary>
             <returns><c>true</c>, if in bounds, <c>false</c> otherwise.</returns>
             <param name="point">Point.</param>
            </member>
        <member name="M:KimonoCore.KimonoBounds.Clone">
             <summary>
             Clone this instance.
             </summary>
             <returns>The clone.</returns>
            </member>
        <member name="T:KimonoCore.KimonoHandle">
             <summary>
             Defines an edit handle that the user manipulates to edit the bounds of a
             <c>KimonoShape</c> or the control points of a Bezier object.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoHandle.DrawWidth">
             <summary>
             The width of the drag handle.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoHandle.DrawOffset">
             <summary>
             The draw offset of the drag handle.
             </summary>
            </member>
        <member name="P:KimonoCore.KimonoHandle.Index">
             <summary>
             Gets or sets the index.
             </summary>
             <value>The index.</value>
            </member>
        <member name="P:KimonoCore.KimonoHandle.HandleType">
             <summary>
             Gets or sets the type of the handle.
             </summary>
             <value>The type of the handle as a <c>KimonoHandleType</c>.</value>
            </member>
        <member name="P:KimonoCore.KimonoHandle.UniqueID">
             <summary>
             Gets or sets the unique identifier.
             </summary>
             <value>The unique identifier.</value>
            </member>
        <member name="P:KimonoCore.KimonoHandle.State">
             <summary>
             Gets the edit state of the <c>KimonoHandle</c>.
             </summary>
             <value>The state as a <c>KimonoShapeState</c>.</value>
            </member>
        <member name="P:KimonoCore.KimonoHandle.X">
             <summary>
             Gets or sets the x value.
             </summary>
             <value>The x coord of the handle's top-left location.</value>
            </member>
        <member name="P:KimonoCore.KimonoHandle.Y">
             <summary>
             Gets or sets the y value.
             </summary>
             <value>The y coord of the handle's top-left location.</value>
            </member>
        <member name="P:KimonoCore.KimonoHandle.Rect">
             <summary>
             Gets the rect.
             </summary>
             <value>The rect.</value>
            </member>
        <member name="P:KimonoCore.KimonoHandle.Constraint">
             <summary>
             Gets or sets the edit constraint.
             </summary>
             <value>The edit constraint as a <c>KimonoHandleConstraint</c>.</value>
            </member>
        <member name="P:KimonoCore.KimonoHandle.HitOffset">
             <summary>
             Gets or sets the hit offset.
             </summary>
             <value>The hit offset.</value>
            </member>
        <member name="P:KimonoCore.KimonoHandle.Color">
             <summary>
             Gets or sets the color that this handle represents in a gradient. If the
             <c>LinkedColor</c> property is <c>null</c>, this color will be used.
             </summary>
             <value>The <c>SKColor</c>.</value>
            </member>
        <member name="P:KimonoCore.KimonoHandle.LinkedColor">
             <summary>
             Gets or sets the color that this handle represents in a gradient. If the
             <c>LinkedColor</c> property is <c>null</c>, the <c>Color</c> property will 
             be used instead.
             </summary>
             <value>The color of the linked.</value>
            </member>
        <member name="P:KimonoCore.KimonoHandle.RepresentedColor">
             <summary>
             Gets the color that this handle represents.
             </summary>
             <value>The color as a <c>SKColor</c>.</value>
            </member>
        <member name="M:KimonoCore.KimonoHandle.#ctor(System.Single,System.Single)">
             <summary>
             Initializes a new instance of the <see cref="T:KimonoCore.KimonoHandle" /> class.
             </summary>
             <param name="x">The x coordinate.</param>
             <param name="y">The y coordinate.</param>
            </member>
        <member name="M:KimonoCore.KimonoHandle.#ctor(System.Single,System.Single,KimonoCore.KimonoShapeState)">
             <summary>
             Initializes a new instance of the <see cref="T:KimonoCore.KimonoHandle" /> class.
             </summary>
             <param name="x">The x coordinate.</param>
             <param name="y">The y coordinate.</param>
             <param name="state">State.</param>
            </member>
        <member name="M:KimonoCore.KimonoHandle.#ctor(System.Single,System.Single,KimonoCore.KimonoHandleConstraint)">
             <summary>
             Initializes a new instance of the <see cref="T:KimonoCore.KimonoHandle" /> class.
             </summary>
             <param name="x">The x coordinate.</param>
             <param name="y">The y coordinate.</param>
             <param name="constraint">Constraint.</param>
            </member>
        <member name="M:KimonoCore.KimonoHandle.#ctor(System.Single,System.Single,KimonoCore.KimonoHandleConstraint,KimonoCore.KimonoShapeState)">
             <summary>
             Initializes a new instance of the <see cref="T:KimonoCore.KimonoHandle" /> class.
             </summary>
             <param name="x">The x coordinate.</param>
             <param name="y">The y coordinate.</param>
             <param name="constraint">Constraint.</param>
             <param name="state">State.</param>
            </member>
        <member name="M:KimonoCore.KimonoHandle.Draw(SkiaSharp.SKCanvas)">
             <summary>
             Draws the hanled into the given Skia canvas.
             </summary>
             <returns>The draw.</returns>
             <param name="canvas">The <c>SKCanvas</c> to draw the hanled into.</param>
            </member>
        <member name="M:KimonoCore.KimonoHandle.MoveTo(System.Single,System.Single)">
             <summary>
             Moves the handle to the given coordinates.
             </summary>
             <param name="x">The x coordinate.</param>
             <param name="y">The y coordinate.</param>
            </member>
        <member name="M:KimonoCore.KimonoHandle.PointInBound(SkiaSharp.SKPoint)">
             <summary>
             Test to see if the given point is inside of the current bounds
             </summary>
             <returns><c>true</c>, if in bounds, <c>false</c> otherwise.</returns>
             <param name="point">Point.</param>
            </member>
        <member name="M:KimonoCore.KimonoHandle.DragHandle(SkiaSharp.SKPoint)">
             <summary>
             Drags the handle.
             </summary>
             <param name="point">Point.</param>
            </member>
        <member name="M:KimonoCore.KimonoHandle.Clone">
             <summary>
             Clone this instance.
             </summary>
             <returns>The clone.</returns>
            </member>
        <member name="E:KimonoCore.KimonoHandle.Moved">
             <summary>
             Occurs when moved.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoHandle.RaiseMoved(SkiaSharp.SKPoint)">
             <summary>
             Raises the moved event.
             </summary>
             <param name="point">Point.</param>
            </member>
        <member name="T:KimonoCore.KimonoHandleConstraint">
             <summary>
             Constrains the movement of a <c>KimonoHandle</c> when it is being moved by the
             user.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoHandleConstraint.None">
             <summary>
             No movement constraint.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoHandleConstraint.Horizontal">
             <summary>
             The handle can only be moved horizontally.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoHandleConstraint.Vertical">
             <summary>
             The handle can only be moved vertically.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoHandleConstraint.Locked">
             <summary>
             The handle is locked in place and cannot be moved.
             </summary>
            </member>
        <member name="T:KimonoCore.KimonoShapeState">
             <summary>
             Holds the current state of a <c>KimonoShape</c> while it is being edited
             by the user.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoShapeState.Unselected">
             <summary>
             The shape is unselected.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoShapeState.Selected">
             <summary>
             The shape is being selected.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoShapeState.Editing">
             <summary>
             The shape is in the edit mode and individual control points can be
             added, deleted, moved or adjusted.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoShapeState.Finalizing">
             <summary>
             The shape is leaving the edit mode and needs to be completed.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoShapeState.Constructing">
             <summary>
             The shape is in the process of being built. For example, a set of
             shapes being added to a group.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoShapeState.Grouping">
             <summary>
             The shape is being added to a group.
             </summary>
            </member>
        <!--FIXME: Invalid documentation markup was found for member T:KimonoCore.KimonoColor-->
        <member name="M:KimonoCore.KimonoColor.CloneColor(SkiaSharp.SKColor)">
             <summary>
             Clones the color.
             </summary>
             <returns>The color.</returns>
             <param name="color">Color.</param>
            </member>
        <member name="F:KimonoCore.KimonoColor._baseColor">
             <summary>
             The <c>KiminoColor</c> this color is based off of.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoColor.Hue">
             <summary>
             The base hue.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoColor.Saturation">
             <summary>
             The base saturation.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoColor.Brightness">
             <summary>
             The base brightness.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoColor.Alpha">
             <summary>
             The base alpha transparency value.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoColor._adjustHue">
             <summary>
             Should adjust hue.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoColor._adjustSaturation">
             <summary>
             Should adjust saturation.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoColor._adjustBrightness">
             <summary>
             Should adjust brightness.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoColor._adjustAlpha">
             <summary>
             Should adjust alpha transparency.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoColor._hueAdjustment">
             <summary>
             The hue adjustment.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoColor._saturationAdjustment">
             <summary>
             The saturation adjustment.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoColor._brightnessAdjustment">
             <summary>
             The brightness adjustment.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoColor._alphaAdjustment">
             <summary>
             The alpha adjustment.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoColor._color">
             <summary>
             The color value.
             </summary>
            </member>
        <member name="P:KimonoCore.KimonoColor.UniqueID">
             <summary>
             Gets or sets the unique identifier.
             </summary>
             <value>The unique identifier.</value>
            </member>
        <member name="P:KimonoCore.KimonoColor.BaseColor">
             <summary>
             Gets or sets the <c>KimonoColor</c> that this color is based off of.
             </summary>
             <value>The base color.</value>
            </member>
        <member name="P:KimonoCore.KimonoColor.Name">
             <summary>
             Gets or sets the name.
             </summary>
             <value>The name.</value>
            </member>
        <member name="P:KimonoCore.KimonoColor.AdjustsHue">
             <summary>
             Gets or sets a value indicating whether this <see cref="T:KimonoCore.KimonoColor" /> adjusts hue.
             </summary>
             <value><c>true</c> if adjusts hue; otherwise, <c>false</c>.</value>
            </member>
        <member name="P:KimonoCore.KimonoColor.HueAdjustment">
             <summary>
             Gets or sets the hue adjustment.
             </summary>
             <value>The hue adjustment.</value>
            </member>
        <member name="P:KimonoCore.KimonoColor.AdjustsSaturation">
             <summary>
             Gets or sets a value indicating whether this <see cref="T:KimonoCore.KimonoColor" /> adjusts saturation.
             </summary>
             <value><c>true</c> if adjusts saturation; otherwise, <c>false</c>.</value>
            </member>
        <member name="P:KimonoCore.KimonoColor.SaturationAdjustment">
             <summary>
             Gets or sets the saturation adjustment.
             </summary>
             <value>The saturation adjustment.</value>
            </member>
        <member name="P:KimonoCore.KimonoColor.AdjustsBrightness">
             <summary>
             Gets or sets a value indicating whether this <see cref="T:KimonoCore.KimonoColor" /> adjusts brightness.
             </summary>
             <value><c>true</c> if adjusts brightness; otherwise, <c>false</c>.</value>
            </member>
        <member name="P:KimonoCore.KimonoColor.BrightnessAdjustment">
             <summary>
             Gets or sets the brightness adjustment.
             </summary>
             <value>The brightness adjustment.</value>
            </member>
        <member name="P:KimonoCore.KimonoColor.AdjustsAlpha">
             <summary>
             Gets or sets a value indicating whether this <see cref="T:KimonoCore.KimonoColor" /> adjusts alpha.
             </summary>
             <value><c>true</c> if adjusts alpha; otherwise, <c>false</c>.</value>
            </member>
        <member name="P:KimonoCore.KimonoColor.AlphaAdjustment">
             <summary>
             Gets or sets the alpha adjustment.
             </summary>
             <value>The alpha adjustment.</value>
            </member>
        <member name="P:KimonoCore.KimonoColor.Color">
             <summary>
             Gets or sets the color.
             </summary>
             <value>The color.</value>
            </member>
        <member name="M:KimonoCore.KimonoColor.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:KimonoCore.KimonoColor" /> class.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoColor.#ctor(KimonoCore.KimonoColor)">
             <summary>
             Initializes a new instance of the <see cref="T:KimonoCore.KimonoColor" /> class.
             </summary>
             <param name="baseColor">Base color.</param>
            </member>
        <member name="M:KimonoCore.KimonoColor.#ctor(SkiaSharp.SKColor)">
             <summary>
             Initializes a new instance of the <see cref="T:KimonoCore.KimonoColor" /> class.
             </summary>
             <param name="color">Color.</param>
            </member>
        <member name="M:KimonoCore.KimonoColor.MixColor">
             <summary>
             Mixes the color based on the base values and any adjustment that
             have been applied.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoColor.BaseColorChanged">
             <summary>
             Handles the base color being changed.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoColor.Clone">
             <summary>
             Clone this instance.
             </summary>
             <returns>The clone.</returns>
            </member>
        <member name="E:KimonoCore.KimonoColor.ColorChanged">
             <summary>
             Occurs when color changed.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoColor.RaiseColorChanged">
             <summary>
             Raises the color changed event.
             </summary>
            </member>
        <member name="T:KimonoCore.KimonoShape">
             <summary>
             Defines the based shape that all other Kimono Shape types will inherit from.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoShape._name">
             <summary>
             The default name of the shape.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoShape._style">
             <summary>
             The default, custom <c>KimonoStyle</c> that is attached to the shape.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoShape._visible">
             <summary>
             The visibility of the shape.
             </summary>
            </member>
        <member name="P:KimonoCore.KimonoShape.Name">
             <summary>
             Gets or sets the name.
             </summary>
             <value>The name.</value>
            </member>
        <member name="P:KimonoCore.KimonoShape.Style">
             <summary>
             Gets or sets the style.
             </summary>
             <value>The <c>KimonoStyle</c> that will be used to draw this shape.</value>
            </member>
        <member name="P:KimonoCore.KimonoShape.ControlPoints">
             <summary>
             Gets or sets the control points that define the path of the shape.
             </summary>
             <value>A collection of <c>KimonoHandle</c> objects.</value>
            </member>
        <member name="P:KimonoCore.KimonoShape.Visible">
             <summary>
             Gets or sets a value indicating whether this <see cref="T:KimonoCore.KimonoShape" /> is visible.
             </summary>
             <value><c>true</c> if visible; otherwise, <c>false</c>.</value>
            </member>
        <member name="P:KimonoCore.KimonoShape.IsEditable">
             <summary>
             Gets a value indicating whether this <see cref="T:KimonoCore.KimonoShape" /> is editable.
             </summary>
             <remarks>An "Editable Shape" is one that is composed of a set of data points (such as
             <c>KimonoVector</c> or <c>KimonoBezier</c>) or a group of objects (such as <c>KimonoShapeGroup</c>).</remarks>
             <value><c>true</c> if is editable; otherwise, <c>false</c>.</value>
            </member>
        <member name="P:KimonoCore.KimonoShape.LayerDepth">
             <summary>
             Gets or sets the layer depth from the bottom to the top controlling how shapes are overlapping
             on the design surface.
             </summary>
             <value>The layer depth.</value>
            </member>
        <member name="M:KimonoCore.KimonoShape.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:KimonoCore.KimonoShape" /> class.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoShape.#ctor(System.Single,System.Single,System.Single,System.Single)">
             <summary>
             Initializes a new instance of the <see cref="T:KimonoCore.KimonoShape" /> class.
             </summary>
             <param name="left">Left.</param>
             <param name="top">Top.</param>
             <param name="right">Right.</param>
             <param name="bottom">Bottom.</param>
            </member>
        <member name="M:KimonoCore.KimonoShape.#ctor(System.Single,System.Single,System.Single,System.Single,KimonoCore.KimonoShapeState)">
             <summary>
             Initializes a new instance of the <see cref="T:KimonoCore.KimonoShape" /> class.
             </summary>
             <param name="left">Left.</param>
             <param name="top">Top.</param>
             <param name="right">Right.</param>
             <param name="bottom">Bottom.</param>
             <param name="state">State.</param>
            </member>
        <member name="M:KimonoCore.KimonoShape.Initialize">
             <summary>
             Initialize this instance.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoShape.StartEditing">
             <summary>
             Places the shape in the editing mode.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoShape.EndEditing">
             <summary>
             Ends the editing mode.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoShape.UncoupleDeletedStyle(KimonoCore.KimonoStyle)">
             <summary>
             Uncouples the deleted style from the shape.
             </summary>
             <param name="deletedStyle">The <c>KimonoStyle</c> to delete.</param>
            </member>
        <member name="M:KimonoCore.KimonoShape.ConformGradientToShape(KimonoCore.KimonoGradient,SkiaSharp.SKPaint)">
             <summary>
             Conforms the gradient to shape by fitting it to the bounds of the shape.
             </summary>
             <param name="gradient">The <c>KimonoGradient</c> to conform.</param>
             <param name="paint">The <c>SKPaint</c> that the gradient is being attached to.</param>
            </member>
        <member name="M:KimonoCore.KimonoShape.ToVector">
             <summary>
             Converts the given shape to a vector.
             </summary>
             <returns>The shape as a <c>KimonoVector</c>.</returns>
            </member>
        <member name="M:KimonoCore.KimonoShape.CloneAttachedStyle">
             <summary>
             Clones the attached style.
             </summary>
             <returns>A duplicate <c>KimonoStyle</c>.</returns>
            </member>
        <member name="M:KimonoCore.KimonoShape.Clone">
             <summary>
             Clone this instance.
             </summary>
             <returns>The clone of this shape as a base <c>KimonoBounds</c>.</returns>
            </member>
        <member name="T:KimonoCore.KimonoStyle">
             <summary>
             Defines as style that can be applied to a <c>KimonoShape</c> to control its
             appearance.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoStyle.ClonePaint(SkiaSharp.SKPaint)">
             <summary>
             Clones the given <c>SKPaint</c> object.
             </summary>
             <returns>The new <c>SKPaint</c> instance.</returns>
             <param name="paint">The <c>SKPaint</c> object to clone.</param>
            </member>
        <member name="F:KimonoCore.KimonoStyle._frameColor">
             <summary>
             Holds a named <c>KimonoColor</c> attached to the style's frame color.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoStyle._fillColor">
             <summary>
             Holds a named <c>KimonoColor</c> attached to the style's fill color.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoStyle._frameGradient">
             <summary>
             The frame gradient.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoStyle._fillGradient">
             <summary>
             The fill gradient.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoStyle._hasFrameJitter">
             <summary>
             If <c>true</c>, the frame uses the jitter effect.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoStyle._frameJitterLength">
             <summary>
             The length of the frame jitter.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoStyle._frameJitterDeviation">
             <summary>
             The frame jitter deviation.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoStyle._hasFillJitter">
             <summary>
             If <c>true</c>, the fill uses the jitter effect.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoStyle._fillJitterLength">
             <summary>
             The length of the fill jitter.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoStyle._fillJitterDeviation">
             <summary>
             The fill jitter deviation.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoStyle._hasFrameDash">
             <summary>
             If <c>true</c>, the frame has a dash effect.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoStyle._hasFillBlur">
             <summary>
             The has fill blur.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoStyle._fillBlur">
             <summary>
             The fill blur.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoStyle._hasFrameBlur">
             <summary>
             The has frame blur.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoStyle._frameBlur">
             <summary>
             The frame blur.
             </summary>
            </member>
        <member name="P:KimonoCore.KimonoStyle.UniqueID">
             <summary>
             Gets or sets the unique identifier.
             </summary>
             <value>The unique identifier.</value>
            </member>
        <member name="P:KimonoCore.KimonoStyle.Name">
             <summary>
             Gets or sets the name.
             </summary>
             <value>The name.</value>
            </member>
        <member name="P:KimonoCore.KimonoStyle.HasFrame">
             <summary>
             Gets or sets a value indicating whether this <see cref="T:KimonoCore.KimonoStyle" /> has a frame.
             </summary>
             <value><c>true</c> if has frame; otherwise, <c>false</c>.</value>
            </member>
        <member name="P:KimonoCore.KimonoStyle.Frame">
             <summary>
             Gets or sets the frame paint style.
             </summary>
             <value>The <c>SKPaint</c> style for the frame.</value>
            </member>
        <member name="P:KimonoCore.KimonoStyle.HasFrameBlur">
             <summary>
             Gets or sets a value indicating whether this <see cref="T:KimonoCore.KimonoStyle" /> has frame blur.
             </summary>
             <value><c>true</c> if has frame blur; otherwise, <c>false</c>.</value>
            </member>
        <member name="P:KimonoCore.KimonoStyle.FrameBlur">
             <summary>
             Gets or sets the frame blur.
             </summary>
             <value>The <c>KimonoBlur</c> applied to the frame.</value>
            </member>
        <member name="P:KimonoCore.KimonoStyle.HasFillBlur">
             <summary>
             Gets or sets a value indicating whether this <see cref="T:KimonoCore.KimonoStyle" /> has fill blur.
             </summary>
             <value><c>true</c> if has fill blur; otherwise, <c>false</c>.</value>
            </member>
        <member name="P:KimonoCore.KimonoStyle.FillBlur">
             <summary>
             Gets or sets the fill blur.
             </summary>
             <value>The <c>KimonoBlur</c> applied to the fill.</value>
            </member>
        <member name="P:KimonoCore.KimonoStyle.FrameColor">
             <summary>
             Gets or sets the color of the frame as a named Kimono Color.
             </summary>
             <value>The color of the frame.</value>
            </member>
        <member name="P:KimonoCore.KimonoStyle.FrameGradient">
             <summary>
             Gets or sets the frame gradient.
             </summary>
             <value>The frame gradient.</value>
            </member>
        <member name="P:KimonoCore.KimonoStyle.HasFill">
             <summary>
             Gets or sets a value indicating whether this <see cref="T:KimonoCore.KimonoStyle" /> has fill.
             </summary>
             <value><c>true</c> if has fill; otherwise, <c>false</c>.</value>
            </member>
        <member name="P:KimonoCore.KimonoStyle.Fill">
             <summary>
             Gets or sets the fill paint style.
             </summary>
             <value>The <c>SKPaint</c> style for the fill.</value>
            </member>
        <member name="P:KimonoCore.KimonoStyle.FillColor">
             <summary>
             Gets or sets the color of the fill as a named Kimono Color.
             </summary>
             <value>The color of the fill.</value>
            </member>
        <member name="P:KimonoCore.KimonoStyle.FillGradient">
             <summary>
             Gets or sets the fill gradient.
             </summary>
             <value>The fill gradient.</value>
            </member>
        <member name="P:KimonoCore.KimonoStyle.StyleType">
             <summary>
             Gets or sets the type of the style.
             </summary>
             <value>The type of the style.</value>
            </member>
        <member name="P:KimonoCore.KimonoStyle.FontMetrics">
             <summary>
             Gets the font metrics.
             </summary>
             <value>The font metrics.</value>
            </member>
        <member name="P:KimonoCore.KimonoStyle.IsLinearText">
             <summary>
             Gets or sets a value indicating whether this <see cref="T:KimonoCore.KimonoStyle" /> is linear text.
             </summary>
             <value><c>true</c> if is linear text; otherwise, <c>false</c>.</value>
            </member>
        <member name="P:KimonoCore.KimonoStyle.IsVerticalText">
             <summary>
             Gets or sets a value indicating whether this <see cref="T:KimonoCore.KimonoStyle" /> is vertical text.
             </summary>
             <value><c>true</c> if is vertical text; otherwise, <c>false</c>.</value>
            </member>
        <member name="P:KimonoCore.KimonoStyle.StrikeThruText">
             <summary>
             Gets or sets a value indicating whether this <see cref="T:KimonoCore.KimonoStyle" /> strike thru text.
             </summary>
             <value><c>true</c> if strike thru text; otherwise, <c>false</c>.</value>
            </member>
        <member name="P:KimonoCore.KimonoStyle.TextAlign">
             <summary>
             Gets or sets the text align.
             </summary>
             <value>The text align.</value>
            </member>
        <member name="P:KimonoCore.KimonoStyle.TextEncoding">
             <summary>
             Gets or sets the text encoding.
             </summary>
             <value>The text encoding.</value>
            </member>
        <member name="P:KimonoCore.KimonoStyle.TextScaleX">
             <summary>
             Gets or sets the text scale x.
             </summary>
             <value>The text scale x.</value>
            </member>
        <member name="P:KimonoCore.KimonoStyle.TextSize">
             <summary>
             Gets or sets the size of the text.
             </summary>
             <value>The size of the text.</value>
            </member>
        <member name="P:KimonoCore.KimonoStyle.TextSkewX">
             <summary>
             Gets or sets the text skew x.
             </summary>
             <value>The text skew x.</value>
            </member>
        <member name="P:KimonoCore.KimonoStyle.Typeface">
             <summary>
             Gets or sets the typeface.
             </summary>
             <value>The typeface.</value>
            </member>
        <member name="P:KimonoCore.KimonoStyle.FontFamilyName">
             <summary>
             Gets or sets the name of the font family.
             </summary>
             <value>The name of the font family.</value>
            </member>
        <member name="P:KimonoCore.KimonoStyle.TypefaceStyle">
             <summary>
             Gets or sets the typeface style.
             </summary>
             <value>The typeface style.</value>
            </member>
        <member name="P:KimonoCore.KimonoStyle.UnderlineText">
             <summary>
             Gets or sets a value indicating whether this <see cref="T:KimonoCore.KimonoStyle" /> underline text.
             </summary>
             <value><c>true</c> if underline text; otherwise, <c>false</c>.</value>
            </member>
        <member name="P:KimonoCore.KimonoStyle.HasFrameJitter">
             <summary>
             Gets or sets a value indicating whether the frame jitter is used.
             </summary>
             <value><c>true</c> if has frame jitter; otherwise, <c>false</c>.</value>
            </member>
        <member name="P:KimonoCore.KimonoStyle.FrameJitterLength">
             <summary>
             Gets or sets the length of the frame jitter.
             </summary>
             <value>The length of the frame jitter.</value>
            </member>
        <member name="P:KimonoCore.KimonoStyle.FrameJitterDeviation">
             <summary>
             Gets or sets the frame jitter deviation.
             </summary>
             <value>The frame jitter deviation.</value>
            </member>
        <member name="P:KimonoCore.KimonoStyle.HasFillJitter">
             <summary>
             Gets or sets a value indicating whether the fill jitter is used.
             </summary>
             <value><c>true</c> if has fill jitter; otherwise, <c>false</c>.</value>
            </member>
        <member name="P:KimonoCore.KimonoStyle.FillJitterLength">
             <summary>
             Gets or sets the length of the fill jitter.
             </summary>
             <value>The length of the fill jitter.</value>
            </member>
        <member name="P:KimonoCore.KimonoStyle.FillJitterDeviation">
             <summary>
             Gets or sets the fill jitter deviation.
             </summary>
             <value>The fill jitter deviation.</value>
            </member>
        <member name="P:KimonoCore.KimonoStyle.HasFrameDash">
             <summary>
             Gets or sets a value indicating whether the frame has a dash.
             </summary>
             <value><c>true</c> if the frame has a dash; otherwise, <c>false</c>.</value>
            </member>
        <member name="P:KimonoCore.KimonoStyle.DashPattern">
             <summary>
             Gets or sets the dash pattern.
             </summary>
             <value>The dash pattern.</value>
            </member>
        <member name="M:KimonoCore.KimonoStyle.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:KimonoCore.KimonoStyle" /> class.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoStyle.Initialize">
             <summary>
             Initialize this instance.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoStyle.HandleFrameBlurChange">
             <summary>
             Handles the frame blur change.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoStyle.HandleFillBlurChange">
             <summary>
             Handles the fill blur change.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoStyle.HandleFrameColorChange">
             <summary>
             Handles the frame color change.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoStyle.HandleFillColorChange">
             <summary>
             Handles the fill color change.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoStyle.HandleFrameGradientChange">
             <summary>
             Handles the frame gradient change.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoStyle.HandleFillGradientChange">
             <summary>
             Handles the fill gradient change.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoStyle.MakeDashInterval">
             <summary>
             Makes the dash interval from the dash pattern.
             </summary>
             <returns>The dash interval.</returns>
            </member>
        <member name="M:KimonoCore.KimonoStyle.ApplyFrameEffects">
             <summary>
             Applies the frame effects based on the style settings.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoStyle.ApplyFillEffects">
             <summary>
             Applies the fill effects based on the style settings.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoStyle.Clone(System.Boolean)">
             <summary>
             Clones the <c>KimonoStyle</c>.
             </summary>
             <returns>The a clone of the <c>KimonoStyle</c>.</returns>
             <param name="deepClone">If set to <c>true</c>, a deep clone of the style is made.</param>
            </member>
        <member name="T:KimonoCore.KimonoShapeRect">
             <summary>
             Draws a rectangle into the Design Surface.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoShapeRect.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:KimonoCore.KimonoShapeRect" /> class.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoShapeRect.#ctor(System.Single,System.Single,System.Single,System.Single)">
             <summary>
             Initializes a new instance of the <see cref="T:KimonoCore.KimonoShapeRect" /> class.
             </summary>
             <param name="left">Left.</param>
             <param name="top">Top.</param>
             <param name="right">Right.</param>
             <param name="bottom">Bottom.</param>
            </member>
        <member name="M:KimonoCore.KimonoShapeRect.#ctor(System.Single,System.Single,System.Single,System.Single,KimonoCore.KimonoShapeState)">
             <summary>
             Initializes a new instance of the <see cref="T:KimonoCore.KimonoShapeRect" /> class.
             </summary>
             <param name="left">Left.</param>
             <param name="top">Top.</param>
             <param name="right">Right.</param>
             <param name="bottom">Bottom.</param>
             <param name="state">State.</param>
            </member>
        <member name="M:KimonoCore.KimonoShapeRect.Initialize">
             <summary>
             Initialize this instance.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoShapeRect.Draw(SkiaSharp.SKCanvas)">
             <summary>
             Draws the rectangle into the given Skia Canvas.
             </summary>
             <param name="canvas">The <c>SKCanvas</c> to draw into.</param>
            </member>
        <member name="M:KimonoCore.KimonoShapeRect.Clone">
             <summary>
             Clone this instance.
             </summary>
             <returns>The clone.</returns>
            </member>
        <member name="T:KimonoCore.KimonoShapeRoundRect">
             <summary>
             Draws a rounded rectangle into the Design Surface.
             </summary>
            </member>
        <member name="P:KimonoCore.KimonoShapeRoundRect.CornerRadius">
             <summary>
             Gets or sets the corner radius.
             </summary>
             <value>The corner radius.</value>
            </member>
        <member name="M:KimonoCore.KimonoShapeRoundRect.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:KimonoCore.KimonoShapeRoundRect" /> class.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoShapeRoundRect.#ctor(System.Single,System.Single,System.Single,System.Single)">
             <summary>
             Initializes a new instance of the <see cref="T:KimonoCore.KimonoShapeRoundRect" /> class.
             </summary>
             <param name="left">Left.</param>
             <param name="top">Top.</param>
             <param name="right">Right.</param>
             <param name="bottom">Bottom.</param>
            </member>
        <member name="M:KimonoCore.KimonoShapeRoundRect.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single)">
             <summary>
             Initializes a new instance of the <see cref="T:KimonoCore.KimonoShapeRoundRect" /> class.
             </summary>
             <param name="left">Left.</param>
             <param name="top">Top.</param>
             <param name="right">Right.</param>
             <param name="bottom">Bottom.</param>
             <param name="cornerRadius">Corner radius.</param>
            </member>
        <member name="M:KimonoCore.KimonoShapeRoundRect.#ctor(System.Single,System.Single,System.Single,System.Single,KimonoCore.KimonoShapeState)">
             <summary>
             Initializes a new instance of the <see cref="T:KimonoCore.KimonoShapeRoundRect" /> class.
             </summary>
             <param name="left">Left.</param>
             <param name="top">Top.</param>
             <param name="right">Right.</param>
             <param name="bottom">Bottom.</param>
             <param name="state">State.</param>
            </member>
        <member name="M:KimonoCore.KimonoShapeRoundRect.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,KimonoCore.KimonoShapeState)">
             <summary>
             Initializes a new instance of the <see cref="T:KimonoCore.KimonoShapeRoundRect" /> class.
             </summary>
             <param name="left">Left.</param>
             <param name="top">Top.</param>
             <param name="right">Right.</param>
             <param name="bottom">Bottom.</param>
             <param name="cornerRadius">Corner radius.</param>
             <param name="state">State.</param>
            </member>
        <member name="M:KimonoCore.KimonoShapeRoundRect.Initialize">
             <summary>
             Initialize this instance.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoShapeRoundRect.Draw(SkiaSharp.SKCanvas)">
             <summary>
             Draws the round rectangle into the given Skia Canvas.
             </summary>
             <param name="canvas">The <c>SKCanvas</c> to draw into.</param>
            </member>
        <member name="M:KimonoCore.KimonoShapeRoundRect.Clone">
             <summary>
             Clone this instance.
             </summary>
             <returns>The clone <c>KimonoShapeRoundRect</c>.</returns>
            </member>
        <member name="T:KimonoCore.KimonoShapeOval">
             <summary>
             Draws an oval into the Design Surface.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoShapeOval.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:KimonoCore.KimonoShapeOval" /> class.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoShapeOval.#ctor(System.Single,System.Single,System.Single,System.Single)">
             <summary>
             Initializes a new instance of the <see cref="T:KimonoCore.KimonoShapeOval" /> class.
             </summary>
             <param name="left">Left.</param>
             <param name="top">Top.</param>
             <param name="right">Right.</param>
             <param name="bottom">Bottom.</param>
            </member>
        <member name="M:KimonoCore.KimonoShapeOval.#ctor(System.Single,System.Single,System.Single,System.Single,KimonoCore.KimonoShapeState)">
             <summary>
             Initializes a new instance of the <see cref="T:KimonoCore.KimonoShapeOval" /> class.
             </summary>
             <param name="left">Left.</param>
             <param name="top">Top.</param>
             <param name="right">Right.</param>
             <param name="bottom">Bottom.</param>
             <param name="state">State.</param>
            </member>
        <member name="M:KimonoCore.KimonoShapeOval.Initialize">
             <summary>
             Initialize this instance.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoShapeOval.Draw(SkiaSharp.SKCanvas)">
             <summary>
             Draw the oval into the given Skia Canvas.
             </summary>
             <param name="canvas">The <c>SKCanvas</c> to draw into.</param>
            </member>
        <member name="M:KimonoCore.KimonoShapeOval.Clone">
             <summary>
             Clone this instance.
             </summary>
             <returns>The clone <c>KimonoOval</c>.</returns>
            </member>
        <member name="T:KimonoCore.KimonoShapeLine">
             <summary>
             Draws a line on the design surface.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoShapeLine.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:KimonoCore.KimonoShapeLine" /> class.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoShapeLine.#ctor(System.Single,System.Single,System.Single,System.Single)">
             <summary>
             Initializes a new instance of the <see cref="T:KimonoCore.KimonoShapeLine" /> class.
             </summary>
             <param name="left">Left.</param>
             <param name="top">Top.</param>
             <param name="right">Right.</param>
             <param name="bottom">Bottom.</param>
            </member>
        <member name="M:KimonoCore.KimonoShapeLine.#ctor(System.Single,System.Single,System.Single,System.Single,KimonoCore.KimonoShapeState)">
             <summary>
             Initializes a new instance of the <see cref="T:KimonoCore.KimonoShapeLine" /> class.
             </summary>
             <param name="left">Left.</param>
             <param name="top">Top.</param>
             <param name="right">Right.</param>
             <param name="bottom">Bottom.</param>
             <param name="state">State.</param>
            </member>
        <member name="M:KimonoCore.KimonoShapeLine.Initialize">
             <summary>
             Initialize this instance.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoShapeLine.Draw(SkiaSharp.SKCanvas)">
             <summary>
             Draws the line into the given Skia canvas.
             </summary>
             <param name="canvas">The <c>SKCanvas</c> to draw into.</param>
            </member>
        <member name="M:KimonoCore.KimonoShapeLine.Clone">
             <summary>
             Clone this instance.
             </summary>
             <returns>The clone of the <c>KimonoLine</c>.</returns>
            </member>
        <member name="T:KimonoCore.KimonoShapeTriangle">
             <summary>
             Draws a triangle into the Design Surface.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoShapeTriangle.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:KimonoCore.KimonoShapeTriangle" /> class.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoShapeTriangle.#ctor(System.Single,System.Single,System.Single,System.Single)">
             <summary>
             Initializes a new instance of the <see cref="T:KimonoCore.KimonoShapeTriangle" /> class.
             </summary>
             <param name="left">Left.</param>
             <param name="top">Top.</param>
             <param name="right">Right.</param>
             <param name="bottom">Bottom.</param>
            </member>
        <member name="M:KimonoCore.KimonoShapeTriangle.#ctor(System.Single,System.Single,System.Single,System.Single,KimonoCore.KimonoShapeState)">
             <summary>
             Initializes a new instance of the <see cref="T:KimonoCore.KimonoShapeTriangle" /> class.
             </summary>
             <param name="left">Left.</param>
             <param name="top">Top.</param>
             <param name="right">Right.</param>
             <param name="bottom">Bottom.</param>
             <param name="state">State.</param>
            </member>
        <member name="M:KimonoCore.KimonoShapeTriangle.Initialize">
             <summary>
             Initialize this instance.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoShapeTriangle.Draw(SkiaSharp.SKCanvas)">
             <summary>
             Draws the triangle into the given Skia Canvas.
             </summary>
             <param name="canvas">The <c>SKCanvas</c> to draw into.</param>
            </member>
        <member name="M:KimonoCore.KimonoShapeTriangle.Clone">
             <summary>
             Clone this instance.
             </summary>
             <returns>The clone <c>KimonoShapeTriangle</c>.</returns>
            </member>
        <member name="T:KimonoCore.KimonoShapeStar">
             <summary>
             Draws a multi-sided star shape into the Design Surface.
             </summary>
            </member>
        <member name="P:KimonoCore.KimonoShapeStar.NumberOfPoints">
             <summary>
             Gets or sets the number of points.
             </summary>
             <value>The number of points.</value>
            </member>
        <member name="P:KimonoCore.KimonoShapeStar.SkipPoints">
             <summary>
             Gets or sets the skip points.
             </summary>
             <value>The skip points.</value>
            </member>
        <member name="P:KimonoCore.KimonoShapeStar.DepthOffset">
             <summary>
             Gets or sets the depth offset for the individual points.
             </summary>
             <value>The depth offset.</value>
            </member>
        <member name="M:KimonoCore.KimonoShapeStar.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:KimonoCore.KimonoShapeStar" /> class.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoShapeStar.#ctor(System.Single,System.Single,System.Single,System.Single)">
             <summary>
             Initializes a new instance of the <see cref="T:KimonoCore.KimonoShapeStar" /> class.
             </summary>
             <param name="left">Left.</param>
             <param name="top">Top.</param>
             <param name="right">Right.</param>
             <param name="bottom">Bottom.</param>
            </member>
        <member name="M:KimonoCore.KimonoShapeStar.#ctor(System.Single,System.Single,System.Single,System.Single,KimonoCore.KimonoShapeState)">
             <summary>
             Initializes a new instance of the <see cref="T:KimonoCore.KimonoShapeStar" /> class.
             </summary>
             <param name="left">Left.</param>
             <param name="top">Top.</param>
             <param name="right">Right.</param>
             <param name="bottom">Bottom.</param>
             <param name="state">State.</param>
            </member>
        <member name="M:KimonoCore.KimonoShapeStar.Initialize">
             <summary>
             Initialize this instance.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoShapeStar.MakeStarPoints(System.Double,System.Int32,System.Int32,SkiaSharp.SKRect,System.Single)">
             <summary>
             Makes the star points.
             </summary>
             <returns>The star points.</returns>
             <remarks>This code adapted from http://csharphelper.com/blog/2014/08/draw-a-star-with-a-given-number-of-points-in-c/
             by Rod Stephens.</remarks>
             <param name="startTheta">Start theta.</param>
             <param name="numPoints">Number points.</param>
             <param name="skip">Skip.</param>
             <param name="rect">Rect.</param>
            </member>
        <member name="M:KimonoCore.KimonoShapeStar.CalculateConcaveRadius(System.Int32,System.Int32)">
             <summary>
             Calculates the concave radius.
             </summary>
             <returns>The concave radius.</returns>
             <remarks>This code adapted from http://csharphelper.com/blog/2014/08/draw-a-star-with-a-given-number-of-points-in-c/
             by Rod Stephens.</remarks>
             <param name="numPoints">Number points.</param>
             <param name="skip">Skip.</param>
            </member>
        <member name="M:KimonoCore.KimonoShapeStar.FindIntersection(SkiaSharp.SKPoint,SkiaSharp.SKPoint,SkiaSharp.SKPoint,SkiaSharp.SKPoint,System.Boolean@,System.Boolean@,SkiaSharp.SKPoint@,SkiaSharp.SKPoint@,SkiaSharp.SKPoint@)">
             <summary>
             Finds the intersection.
             </summary>
             <remarks>This code adapted from http://csharphelper.com/blog/2014/08/determine-where-two-lines-intersect-in-c/
             by Rod Stephens.</remarks>
             <param name="p1">P1.</param>
             <param name="p2">P2.</param>
             <param name="p3">P3.</param>
             <param name="p4">P4.</param>
             <param name="lines_intersect">If set to <c>true</c> lines intersect.</param>
             <param name="segments_intersect">If set to <c>true</c> segments intersect.</param>
             <param name="intersection">Intersection.</param>
             <param name="close_p1">Close p1.</param>
             <param name="close_p2">Close p2.</param>
            </member>
        <member name="M:KimonoCore.KimonoShapeStar.Draw(SkiaSharp.SKCanvas)">
             <summary>
             Draws the star into the given Skia Canvas.
             </summary>
             <param name="canvas">The <c>SKCanvas</c> to draw into.</param>
            </member>
        <member name="M:KimonoCore.KimonoShapeStar.ToVector">
             <summary>
             Converts the star into a vector.
             </summary>
             <returns>The <c>KimonoShapeVector</c> version of the star.</returns>
            </member>
        <member name="M:KimonoCore.KimonoShapeStar.Clone">
             <summary>
             Clone this instance.
             </summary>
             <returns>The clone <c>KimonoShapeStar</c>.</returns>
            </member>
        <member name="T:KimonoCore.KimonoShapePolygon">
             <summary>
             Draws a multi-sided polygon into the Design Surface.
             </summary>
            </member>
        <member name="P:KimonoCore.KimonoShapePolygon.NumberOfSides">
             <summary>
             Gets or sets the number of sides.
             </summary>
             <value>The number of sides.</value>
            </member>
        <member name="M:KimonoCore.KimonoShapePolygon.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:KimonoCore.KimonoShapePolygon" /> class.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoShapePolygon.#ctor(System.Single,System.Single,System.Single,System.Single)">
             <summary>
             Initializes a new instance of the <see cref="T:KimonoCore.KimonoShapePolygon" /> class.
             </summary>
             <param name="left">Left.</param>
             <param name="top">Top.</param>
             <param name="right">Right.</param>
             <param name="bottom">Bottom.</param>
            </member>
        <member name="M:KimonoCore.KimonoShapePolygon.#ctor(System.Single,System.Single,System.Single,System.Single,KimonoCore.KimonoShapeState)">
             <summary>
             Initializes a new instance of the <see cref="T:KimonoCore.KimonoShapePolygon" /> class.
             </summary>
             <param name="left">Left.</param>
             <param name="top">Top.</param>
             <param name="right">Right.</param>
             <param name="bottom">Bottom.</param>
             <param name="state">State.</param>
            </member>
        <member name="M:KimonoCore.KimonoShapePolygon.Initialize">
             <summary>
             Initialize this instance.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoShapePolygon.MakeSidePoints(System.Double,System.Int32,SkiaSharp.SKRect)">
             <summary>
             Makes the star points.
             </summary>
             <returns>The star points.</returns>
             <remarks>This code adapted from http://csharphelper.com/blog/2014/08/draw-a-star-with-a-given-number-of-points-in-c/
             by Rod Stephens.</remarks>
             <param name="startTheta">Start theta.</param>
             <param name="numPoints">Number points.</param>
             <param name="skip">Skip.</param>
             <param name="rect">Rect.</param>
            </member>
        <member name="M:KimonoCore.KimonoShapePolygon.Draw(SkiaSharp.SKCanvas)">
             <summary>
             Draws the polygon into the given Skia Canvas.
             </summary>
             <param name="canvas">The <c>SKCanvas</c> to draw into.</param>
            </member>
        <member name="M:KimonoCore.KimonoShapePolygon.Clone">
             <summary>
             Clone this instance.
             </summary>
             <returns>The clone <c>KimonoPloygon</c>.</returns>
            </member>
        <member name="T:KimonoCore.KimonoShapeVector">
             <summary>
             A vector is a hard edged shape consisting of a set of datapoints that will be drawn into the Desing Surface.
             </summary>
            </member>
        <member name="P:KimonoCore.KimonoShapeVector.Points">
             <summary>
             Gets or sets the points that define the shape.
             </summary>
             <value>The points.</value>
            </member>
        <member name="P:KimonoCore.KimonoShapeVector.Closed">
             <summary>
             Gets or sets a value indicating whether this <see cref="T:KimonoCore.KimonoShapeVector" /> is closed.
             </summary>
             <value><c>true</c> if closed; otherwise, <c>false</c>.</value>
            </member>
        <member name="P:KimonoCore.KimonoShapeVector.IsEditable">
             <summary>
             Gets a value indicating whether this <see cref="T:KimonoCore.KimonoShapeVector" /> is editable.
             </summary>
             <value><c>true</c> if is editable; otherwise, <c>false</c>.</value>
            </member>
        <member name="M:KimonoCore.KimonoShapeVector.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:KimonoCore.KimonoShapeVector" /> class.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoShapeVector.#ctor(System.Single,System.Single,System.Single,System.Single)">
             <summary>
             Initializes a new instance of the <see cref="T:KimonoCore.KimonoShapeVector" /> class.
             </summary>
             <param name="left">Left.</param>
             <param name="top">Top.</param>
             <param name="right">Right.</param>
             <param name="bottom">Bottom.</param>
            </member>
        <member name="M:KimonoCore.KimonoShapeVector.#ctor(System.Single,System.Single,System.Single,System.Single,KimonoCore.KimonoShapeState)">
             <summary>
             Initializes a new instance of the <see cref="T:KimonoCore.KimonoShapeVector" /> class.
             </summary>
             <param name="left">Left.</param>
             <param name="top">Top.</param>
             <param name="right">Right.</param>
             <param name="bottom">Bottom.</param>
             <param name="state">State.</param>
            </member>
        <member name="M:KimonoCore.KimonoShapeVector.Initialize">
             <summary>
             Initialize this instance.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoShapeVector.RecalculateVectorBounds">
             <summary>
             Recalculates the vector bounds to encompas all of the data points that define the shape.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoShapeVector.AddPoint(System.Single,System.Single)">
             <summary>
             Adds a point to the shape.
             </summary>
             <param name="x">The x coordinate.</param>
             <param name="y">The y coordinate.</param>
            </member>
        <member name="M:KimonoCore.KimonoShapeVector.AddPoint(SkiaSharp.SKPoint)">
             <summary>
             Adds the given point to the shape.
             </summary>
             <param name="point">The new <c>SKPoint</c> to add.</param>
            </member>
        <member name="M:KimonoCore.KimonoShapeVector.MoveLastPoint(SkiaSharp.SKPoint)">
             <summary>
             Moves the last point added to the new position.
             </summary>
             <param name="point">The <c>SKPoint</c> for the new position.</param>
            </member>
        <member name="M:KimonoCore.KimonoShapeVector.RemovePoint(System.Int32)">
             <summary>
             Removes the given point.
             </summary>
             <param name="n">The index of the point ot remove.</param>
            </member>
        <member name="M:KimonoCore.KimonoShapeVector.ApplyMoveAndScale">
             <summary>
             Applies the move and scale amount to the data point that make up the shape.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoShapeVector.Draw(SkiaSharp.SKCanvas)">
             <summary>
             Draws the shape into the given Skia Canvas.
             </summary>
             <param name="canvas">The <c>SKCanvas</c> to draw into.</param>
            </member>
        <member name="M:KimonoCore.KimonoShapeVector.PointInBound(SkiaSharp.SKPoint)">
             <summary>
             Tests to see if the given point is inside the bounds of the shape.
             </summary>
             <returns><c>true</c>, if in bound was pointed, <c>false</c> otherwise.</returns>
             <param name="point">The <c>SKPoint</c> to test.</param>
            </member>
        <member name="M:KimonoCore.KimonoShapeVector.DragBounds(SkiaSharp.SKPoint)">
             <summary>
             Drags the bounds of the shape to a new location.
             </summary>
             <param name="point">The <c>SKPoint</c> to drag the bounds to.</param>
            </member>
        <member name="M:KimonoCore.KimonoShapeVector.BoundsChanged">
             <summary>
             Handles the bounds of the shape being changed.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoShapeVector.StartEditing">
             <summary>
             Places the shape into the editing mode where the user can adjust the individual data points
             that define the shape.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoShapeVector.Clone">
             <summary>
             Clone this instance.
             </summary>
             <returns>The clone <c>KimonoShapeVector</c>.</returns>
            </member>
        <member name="T:KimonoCore.KimonoSketch">
             <summary>
             Holds a collection of <c>KimonoShapes</c> that are used to create a given
             image using Skia.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoSketch.ShapeUnderConstruction">
             <summary>
             The shape under construction.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoSketch.PreviousSize">
             <summary>
             The size of the previous of a sketch for a rezise operation.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoSketch.Size">
             <summary>
             The current size of the sketch
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoSketch._tool">
             <summary>
             The currently <c>KimonoTool</c> that will be used to edit the sketch.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoSketch._canvasColor">
             <summary>
             The color of the canvas.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoSketch._selectedShape">
             <summary>
             The selected shape.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoSketch.IgnoreDrag">
             <summary>
             If <c>true</c>, the next drag event will be ignored.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoSketch.PerformingDrag">
             <summary>
             If <c>true</c>, the user is performing a drag operation.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoSketch.ToolDownAt">
             <summary>
             The last point that a <c>KimonoTool</c> went down on the sketch's Design
             Surface.
             </summary>
            </member>
        <member name="P:KimonoCore.KimonoSketch.UniqueID">
             <summary>
             Gets or sets the unique identifier.
             </summary>
             <value>The unique identifier.</value>
            </member>
        <member name="P:KimonoCore.KimonoSketch.Name">
             <summary>
             Gets or sets the name.
             </summary>
             <value>The name.</value>
            </member>
        <member name="P:KimonoCore.KimonoSketch.Width">
             <summary>
             Gets or sets the width.
             </summary>
             <value>The width.</value>
            </member>
        <member name="P:KimonoCore.KimonoSketch.Height">
             <summary>
             Gets or sets the height.
             </summary>
             <value>The height.</value>
            </member>
        <member name="P:KimonoCore.KimonoSketch.CanvasColor">
             <summary>
             Gets or sets the color of the canvas.
             </summary>
             <value>The color of the canvas.</value>
            </member>
        <member name="P:KimonoCore.KimonoSketch.DrawCanvas">
             <summary>
             Gets or sets a value indicating whether this <see cref="T:KimonoCore.KimonoSketch" /> should draw 
             the canvas when it is included in another sketch.
             </summary>
             <value><c>true</c> if draw canvas; otherwise, <c>false</c>.</value>
            </member>
        <member name="P:KimonoCore.KimonoSketch.Shapes">
             <summary>
             Gets or sets the shapes.
             </summary>
             <value>The shapes.</value>
            </member>
        <member name="P:KimonoCore.KimonoSketch.Tool">
             <summary>
             Gets or sets the tool.
             </summary>
             <value>The tool.</value>
            </member>
        <member name="P:KimonoCore.KimonoSketch.SelectedShape">
             <summary>
             Gets or sets the selected shape.
             </summary>
             <value>The selected shape.</value>
            </member>
        <member name="P:KimonoCore.KimonoSketch.DeeplySelectedShape">
             <summary>
             Gets the deepest selected shape in a chain of groups.
             </summary>
             <value>The deeply selected shape.</value>
            </member>
        <member name="P:KimonoCore.KimonoSketch.DeeplySelectedGroup">
             <summary>
             Gets the deepest selected group in a chain of groups that is in the edit mode.
             </summary>
             <value>The deeply selected group.</value>
            </member>
        <member name="P:KimonoCore.KimonoSketch.SelectedShapeAtBottom">
             <summary>
             Gets a value indicating whether the selected shape is at the bottom.
             </summary>
             <value><c>true</c> if selected shape at bottom; otherwise, <c>false</c>.</value>
            </member>
        <member name="P:KimonoCore.KimonoSketch.SelectedShapeAtTop">
             <summary>
             Gets a value indicating whether the selected shape is at the top.
             </summary>
             <value><c>true</c> if selected shape at top; otherwise, <c>false</c>.</value>
            </member>
        <member name="P:KimonoCore.KimonoSketch.CanAlignShapes">
             <summary>
             Gets a value indicating whether alignment can be applied on a set of shapes.
             </summary>
             <value><c>true</c> if can align shapes; otherwise, <c>false</c>.</value>
            </member>
        <member name="P:KimonoCore.KimonoSketch.CanGroupShapes">
             <summary>
             Gets a value indicating whether the selection of shapes can be grouped.
             </summary>
             <value><c>true</c> if can group shapes; otherwise, <c>false</c>.</value>
            </member>
        <member name="P:KimonoCore.KimonoSketch.CanUngroupShapes">
             <summary>
             Gets a value indicating whether the selection of shapes can be ungrouped.
             </summary>
             <value><c>true</c> if can group shapes; otherwise, <c>false</c>.</value>
            </member>
        <member name="M:KimonoCore.KimonoSketch.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:KimonoCore.KimonoSketch" /> class.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoSketch.#ctor(System.String,System.Single,System.Single)">
             <summary>
             Initializes a new instance of the <see cref="T:KimonoCore.KimonoSketch" /> class.
             </summary>
             <param name="name">Name.</param>
             <param name="width">Width.</param>
             <param name="height">Height.</param>
            </member>
        <member name="M:KimonoCore.KimonoSketch.Initialize">
             <summary>
             Initialize this instance.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoSketch.SavePreviousSize">
             <summary>
             Saves the previous size of the sketch.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoSketch.ApplySizeChange">
             <summary>
             Applies the size change.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoSketch.FindShape(System.String)">
             <summary>
             Finds the shape specified by its unique ID.
             </summary>
             <returns>If found, the <c>KimonoShape</c> will be returned, else <c>null</c>.</returns>
             <param name="uniqueID">Unique identifier.</param>
            </member>
        <member name="M:KimonoCore.KimonoSketch.Draw">
             <summary>
             Draw this instance into a <c>SKData</c> buffer.
             </summary>
             <returns>An <c>SKdata</c> buffer representing the sketch as a Skia image.</returns>
            </member>
        <member name="M:KimonoCore.KimonoSketch.MoveSelectedShapeToBottom">
             <summary>
             Moves the selected shape to bottom.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoSketch.MoveSelectedShapeBackwards">
             <summary>
             Moves the selected shape backwards.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoSketch.MoveSelectedShapeToTop">
             <summary>
             Moves the selected shape to top.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoSketch.MoveSelectedShapeForwards">
             <summary>
             Moves the selected shape forwards.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoSketch.AddShape(KimonoCore.KimonoShape)">
             <summary>
             Adds the shape.
             </summary>
             <param name="shape">The <c>KimonoShape</c> to add.</param>
            </member>
        <member name="M:KimonoCore.KimonoSketch.RecalculateLayerDepths">
             <summary>
             Recalculates the layer depths.
             </summary>
             <remarks>Layer depths are used to maintain the front to back order of the
             <c>KimonoShapes</c> that for the sketch.</remarks>
            </member>
        <member name="M:KimonoCore.KimonoSketch.DuplicateSelectedShape">
             <summary>
             Duplicates the selected shape.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoSketch.DeleteSelectedShape">
             <summary>
             Deletes the selected shape.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoSketch.SelectShape(KimonoCore.KimonoShape)">
             <summary>
             Selects the given shape.
             </summary>
             <param name="shape">The <c>KimonoShape</c> to select.</param>
            </member>
        <member name="M:KimonoCore.KimonoSketch.DeselectAll">
             <summary>
             Deselects all shapes in the sketch.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoSketch.GroupUngroupSelectedShapes">
             <summary>
             Groups or ungroups the currently selected group of shapes
             based on the current selection type.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoSketch.RelinkShape(KimonoCore.KimonoShape)">
             <summary>
             Relinks the given shape after a clone operation.
             </summary>
             <param name="shape">The <c>KimonoShape</c> to relink.</param>
            </member>
        <member name="M:KimonoCore.KimonoSketch.Clone">
             <summary>
             Clone this instance.
             </summary>
             <returns>A deep clone of this <c>KimonoSketch</c>.</returns>
            </member>
        <member name="M:KimonoCore.KimonoSketch.ToolDown(SkiaSharp.SKPoint,System.Int32,System.Boolean)">
             <summary>
             Handles the user placing the current <c>KimonoTool</c> down on the sketch's
             Design Surface.
             </summary>
             <param name="point">The <c>SKPoint</c> where the tool went down on the Design Surface.</param>
             <param name="clicks">The number of time the user clicked/tapped the tool down on the Design Surface.</param>
             <param name="multiSelect">If <c>true</c>, the user has started a multi-shape select process.</param>
            </member>
        <member name="M:KimonoCore.KimonoSketch.ToolDrag(SkiaSharp.SKPoint)">
             <summary>
             Handle the user dragging the selected <c>KimonoTool</c> on the sketch's Design Surface.
             </summary>
             <param name="point">The <c>SKPoint</c> representing the new tool position on the Design Surface.</param>
            </member>
        <member name="M:KimonoCore.KimonoSketch.ToolUp(SkiaSharp.SKPoint)">
             <summary>
             Handles the user lifting the current <c>KimonoTool</c> off of the sketch's Design Surface.
             </summary>
             <param name="point">The <c>SKPoint</c> where the user lifted up the tool.</param>
            </member>
        <member name="E:KimonoCore.KimonoSketch.RequestNewUndoPoint">
             <summary>
             Occurs when a new undo point is requested.
             </summary>
            </member>
        <member name="E:KimonoCore.KimonoSketch.SketchSizeChanged">
             <summary>
             Occurs when sketch size changed.
             </summary>
            </member>
        <member name="E:KimonoCore.KimonoSketch.SketchModified">
             <summary>
             Occurs when sketch modified.
             </summary>
            </member>
        <member name="E:KimonoCore.KimonoSketch.ImageBufferNeedsRefresh">
             <summary>
             Occurs when image buffer needs refresh.
             </summary>
            </member>
        <member name="E:KimonoCore.KimonoSketch.SelectedShapeModified">
             <summary>
             Occurs when selected shape is modified.
             </summary>
            </member>
        <member name="E:KimonoCore.KimonoSketch.SelectionChanged">
             <summary>
             Occurs when selection changed.
             </summary>
            </member>
        <member name="E:KimonoCore.KimonoSketch.ToolChanged">
             <summary>
             Occurs when tool changed.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoSketch.RaiseRequestNewUndoPoint">
             <summary>
             Raises the request new undo point event.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoSketch.RaiseSketchSizeChanged">
             <summary>
             Raises the sketch size changed event.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoSketch.RaiseSketchModified">
             <summary>
             Raises the sketch modified event.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoSketch.RaiseImageBufferNeedsRefresh">
             <summary>
             Raises the image buffer needs refresh event.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoSketch.RaiseSelectedShapeModified">
             <summary>
             Raises the selected shape modified event.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoSketch.RaiseSelectionChanged(KimonoCore.KimonoShape)">
             <summary>
             Raises the selection changed event.
             </summary>
             <param name="selected">Selected.</param>
            </member>
        <member name="M:KimonoCore.KimonoSketch.RaiseToolChanged(KimonoCore.KimonoTool)">
             <summary>
             Raises the tool changed event.
             </summary>
             <param name="tool">The new <c>KimonoTool</c> that has been selected.</param>
            </member>
        <member name="T:KimonoCore.KimonoTool">
             <summary>
             Defines the current tool that is active in a <c>KimonoSketch</c> that
             the user can use to create or modify a <c>KimonoShape</c>.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoTool.Cursor">
             <summary>
             Use the Cursor tool to modify an existing <c>KimonoShape</c>.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoTool.Line">
             <summary>
             Use the Line tool to add a new <c>KimonoShapeLine</c> to the sketch.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoTool.Arrow">
             <summary>
             Use the Arrow tool to add a new <c>KimonoShapeArrow</c> to the sketch.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoTool.Rectangle">
             <summary>
             Use the Rectangle tool to add a new <c>KimonoShapeRect</c> to the sketch.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoTool.Oval">
             <summary>
             Use the Oval tool to add a new <c>KimonoShapeOval</c> to the sketch.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoTool.RoundRect">
             <summary>
             Use the Round Rect tool to add a new <c>KimonoShapeRoundRect</c> to the sketch.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoTool.Star">
             <summary>
             Use the Star tool to add a new <c>KimonoShapeStar</c> to the sketch.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoTool.Polygon">
             <summary>
             Use the Polygon tool to add a new <c>KimonoShapePolygon</c> to the sketch.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoTool.Triangle">
             <summary>
             Use the Triangle tool to add a new <c>KimonoShapeTriangle</c> to the sketch.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoTool.Vector">
             <summary>
             Use the Vector tool to add a new <c>KimonoShapeVector</c> to the sketch.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoTool.Bezier">
             <summary>
             Use the Bezier tool to add a new <c>KimonoShapeBezier</c> to the sketch.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoTool.Text">
             <summary>
             Use the Text tool to add a new <c>KimonoShapeText</c> to the sketch.
             </summary>
            </member>
        <member name="T:KimonoCore.KimonoStyleType">
             <summary>
             Defines the type of a <c>KimonoStyle</c> that will be used to draw a given
             <c>KimonoShape</c> in.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoStyleType.Default">
             <summary>
             The default style for new shapes. This style cannot be deleted or renamed by the user.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoStyleType.Custom">
             <summary>
             A custom style that belongs only to an individual shape instance.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoStyleType.CustomText">
             <summary>
             A custom text style that belongs only to an individual <c>KimonoShapeText</c> instance.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoStyleType.Standard">
             <summary>
             A shared style that can be applied to multiple <c>Kimonoshape</c> instances.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoStyleType.Text">
             <summary>
             A shared text style that can be applied to multiple <c>KimonoShapeText</c> instances.
             </summary>
            </member>
        <member name="T:KimonoCore.Kimono">
             <summary>
             Holds a set of shared utilities that are used across the Kimono classes.
             </summary>
            </member>
        <member name="M:KimonoCore.Kimono.CharIsNumber(System.Char)">
             <summary>
             Test to see if the given character is a number character.
             </summary>
             <returns><c>true</c>, if is number was chared, <c>false</c> otherwise.</returns>
             <param name="c">C.</param>
            </member>
        <member name="M:KimonoCore.Kimono.IncrementName(System.String)">
             <summary>
             Increments the name by appending a number to the end or incrementing an existing
             number count.
             </summary>
             <returns>The name.</returns>
             <param name="name">Name.</param>
            </member>
        <member name="M:KimonoCore.Kimono.CloneSKPoint(SkiaSharp.SKPoint)">
             <summary>
             Clones the given <c>SKPoint</c>.
             </summary>
             <returns>A clone of the given point.</returns>
             <param name="point">The <c>SKPoint</c> to clone.</param>
            </member>
        <member name="T:KimonoCore.Kimono.PortfolioEventDelegate">
             <summary>
             Portfolio event delegate.
             </summary>
            </member>
        <member name="T:KimonoCore.Kimono.SketchEventDelegate">
             <summary>
             Sketch event delegate.
             </summary>
            </member>
        <member name="T:KimonoCore.Kimono.StyleEventDelegate">
             <summary>
             Style event delegate.
             </summary>
            </member>
        <member name="T:KimonoCore.Kimono.ShapeEventDelegate">
             <summary>
             Shape event delegate.
             </summary>
            </member>
        <member name="T:KimonoCore.Kimono.ToolEventDelegate">
             <summary>
             Tool event delegate.
             </summary>
            </member>
        <member name="T:KimonoCore.Kimono.SkiaPointEventDelegate">
             <summary>
             Skia point event delegate.
             </summary>
            </member>
        <member name="T:KimonoCore.Kimono.GroupEventDelegate">
             <summary>
             Group event delegate.
             </summary>
            </member>
        <member name="T:KimonoCore.Kimono.ColorEventDelegate">
             <summary>
             Color event delegate.
             </summary>
            </member>
        <member name="T:KimonoCore.Kimono.SkiaColorEventDelegate">
             <summary>
             Skia color event delegate.
             </summary>
            </member>
        <member name="T:KimonoCore.Kimono.GradientEventDelegate">
             <summary>
             Gradient event delegate.
             </summary>
            </member>
        <member name="T:KimonoCore.Kimono.HandleEventDelegate">
             <summary>
             Handle event delegate.
             </summary>
            </member>
        <member name="T:KimonoCore.KimonoShapeArrow">
             <summary>
             Draws either an outlined or single line arrow with heads on one or both ends.
             </summary>
            </member>
        <member name="P:KimonoCore.KimonoShapeArrow.HasStartHead">
             <summary>
             Gets or sets a value indicating whether this <see cref="T:KimonoCore.KimonoShapeArrow" /> has start head.
             </summary>
             <value><c>true</c> if has start head; otherwise, <c>false</c>.</value>
            </member>
        <member name="P:KimonoCore.KimonoShapeArrow.HasEndHead">
             <summary>
             Gets or sets a value indicating whether this <see cref="T:KimonoCore.KimonoShapeArrow" /> has end head.
             </summary>
             <value><c>true</c> if has end head; otherwise, <c>false</c>.</value>
            </member>
        <member name="P:KimonoCore.KimonoShapeArrow.HeadInnerRatio">
             <summary>
             Gets or sets the head inner ratio.
             </summary>
             <value>The head inner ratio.</value>
            </member>
        <member name="P:KimonoCore.KimonoShapeArrow.HeadOuterRatio">
             <summary>
             Gets or sets the head outer ratio.
             </summary>
             <value>The head outer ratio.</value>
            </member>
        <member name="P:KimonoCore.KimonoShapeArrow.IsStreamlined">
             <summary>
             Gets or sets a value indicating whether this <see cref="T:KimonoCore.KimonoShapeArrow" /> is streamlined.
             </summary>
             <remarks>A Streamlined Arrow, is drawn as a single line.</remarks>
             <value><c>true</c> if is streamlined; otherwise, <c>false</c>.</value>
            </member>
        <member name="M:KimonoCore.KimonoShapeArrow.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:KimonoCore.KimonoShapeArrow" /> class.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoShapeArrow.#ctor(System.Single,System.Single,System.Single,System.Single)">
             <summary>
             Initializes a new instance of the <see cref="T:KimonoCore.KimonoShapeArrow" /> class.
             </summary>
             <param name="left">Left.</param>
             <param name="top">Top.</param>
             <param name="right">Right.</param>
             <param name="bottom">Bottom.</param>
            </member>
        <member name="M:KimonoCore.KimonoShapeArrow.#ctor(System.Single,System.Single,System.Single,System.Single,KimonoCore.KimonoShapeState)">
             <summary>
             Initializes a new instance of the <see cref="T:KimonoCore.KimonoShapeArrow" /> class.
             </summary>
             <param name="left">Left.</param>
             <param name="top">Top.</param>
             <param name="right">Right.</param>
             <param name="bottom">Bottom.</param>
             <param name="state">State.</param>
            </member>
        <member name="M:KimonoCore.KimonoShapeArrow.Initialize">
             <summary>
             Initialize this instance.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoShapeArrow.Draw(SkiaSharp.SKCanvas)">
             <summary>
             Draws the arrow into the specified Skia canvas.
             </summary>
             <param name="canvas">The <c>SKCanvas</c> to draw into.</param>
            </member>
        <member name="M:KimonoCore.KimonoShapeArrow.GrowBounds(SkiaSharp.SKPoint)">
             <summary>
             Grows the bounds of the arrow.
             </summary>
             <param name="point">The <c>SKPoint</c> containing the bounds adjustment.</param>
            </member>
        <member name="M:KimonoCore.KimonoShapeArrow.DragBounds(SkiaSharp.SKPoint)">
             <summary>
             Drags the bounds of the arrow to a new location.
             </summary>
             <param name="point">The <c>SKPoint</c> specifying the new location of the bounds.</param>
            </member>
        <member name="M:KimonoCore.KimonoShapeArrow.Clone">
             <summary>
             Clone this instance.
             </summary>
             <returns>The clone of the <c>KimonoArrow</c>.</returns>
            </member>
        <member name="T:KimonoCore.KimonoShapeText">
             <summary>
             Draws a block of text into the Design Surface within the specifid bounds of this shape.
             </summary>
            </member>
        <member name="P:KimonoCore.KimonoShapeText.Text">
             <summary>
             Gets or sets the text.
             </summary>
             <value>The text.</value>
            </member>
        <member name="P:KimonoCore.KimonoShapeText.FontMetrics">
             <summary>
             Gets the font metrics.
             </summary>
             <value>The font metrics.</value>
            </member>
        <member name="P:KimonoCore.KimonoShapeText.IsLinearText">
             <summary>
             Gets or sets a value indicating whether this <see cref="T:KimonoCore.KimonoShapeText" /> is linear text.
             </summary>
             <value><c>true</c> if is linear text; otherwise, <c>false</c>.</value>
            </member>
        <member name="P:KimonoCore.KimonoShapeText.IsVerticalText">
             <summary>
             Gets or sets a value indicating whether this <see cref="T:KimonoCore.KimonoShapeText" /> is vertical text.
             </summary>
             <value><c>true</c> if is vertical text; otherwise, <c>false</c>.</value>
            </member>
        <member name="P:KimonoCore.KimonoShapeText.StrikeThruText">
             <summary>
             Gets or sets a value indicating whether this <see cref="T:KimonoCore.KimonoShapeText" /> strike thru text.
             </summary>
             <value><c>true</c> if strike thru text; otherwise, <c>false</c>.</value>
            </member>
        <member name="P:KimonoCore.KimonoShapeText.TextAlign">
             <summary>
             Gets or sets the text align.
             </summary>
             <value>The text align.</value>
            </member>
        <member name="P:KimonoCore.KimonoShapeText.TextEncoding">
             <summary>
             Gets or sets the text encoding.
             </summary>
             <value>The text encoding.</value>
            </member>
        <member name="P:KimonoCore.KimonoShapeText.TextScaleX">
             <summary>
             Gets or sets the text scale x.
             </summary>
             <value>The text scale x.</value>
            </member>
        <member name="P:KimonoCore.KimonoShapeText.TextSize">
             <summary>
             Gets or sets the size of the text.
             </summary>
             <value>The size of the text.</value>
            </member>
        <member name="P:KimonoCore.KimonoShapeText.TextSkewX">
             <summary>
             Gets or sets the text skew x.
             </summary>
             <value>The text skew x.</value>
            </member>
        <member name="P:KimonoCore.KimonoShapeText.Typeface">
             <summary>
             Gets or sets the typeface.
             </summary>
             <value>The typeface.</value>
            </member>
        <member name="P:KimonoCore.KimonoShapeText.FontFamilyName">
             <summary>
             Gets or sets the name of the font family.
             </summary>
             <value>The name of the font family.</value>
            </member>
        <member name="P:KimonoCore.KimonoShapeText.TypefaceStyle">
             <summary>
             Gets or sets the typeface style.
             </summary>
             <value>The typeface style.</value>
            </member>
        <member name="P:KimonoCore.KimonoShapeText.UnderlineText">
             <summary>
             Gets or sets a value indicating whether this <see cref="T:KimonoCore.KimonoShapeText" /> underline text.
             </summary>
             <value><c>true</c> if underline text; otherwise, <c>false</c>.</value>
            </member>
        <member name="M:KimonoCore.KimonoShapeText.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:KimonoCore.KimonoShapeText" /> class.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoShapeText.#ctor(System.Single,System.Single,System.Single,System.Single)">
             <summary>
             Initializes a new instance of the <see cref="T:KimonoCore.KimonoShapeText" /> class.
             </summary>
             <param name="left">Left.</param>
             <param name="top">Top.</param>
             <param name="right">Right.</param>
             <param name="bottom">Bottom.</param>
            </member>
        <member name="M:KimonoCore.KimonoShapeText.#ctor(System.Single,System.Single,System.Single,System.Single,KimonoCore.KimonoShapeState)">
             <summary>
             Initializes a new instance of the <see cref="T:KimonoCore.KimonoShapeText" /> class.
             </summary>
             <param name="left">Left.</param>
             <param name="top">Top.</param>
             <param name="right">Right.</param>
             <param name="bottom">Bottom.</param>
             <param name="state">State.</param>
            </member>
        <member name="M:KimonoCore.KimonoShapeText.Initialize">
             <summary>
             Initialize this instance.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoShapeText.Draw(SkiaSharp.SKCanvas)">
             <summary>
             Draws the text block into the given Skia Canvas.
             </summary>
             <remarks>TODO: This routine currently breaks line on characters and it needs
             to be adjust to break on word boundaries.</remarks>
             <param name="canvas">The <c>SKCanvas</c> to draw into.</param>
            </member>
        <member name="M:KimonoCore.KimonoShapeText.GrowBounds(SkiaSharp.SKPoint)">
             <summary>
             Grows the bounds of the text block.
             </summary>
             <remarks>TODO: Changing the bounds of a text box should optionally
             scale the size of the text within.</remarks>
             <param name="point">The <c>SKPoint</c> to adjust the bounds by.</param>
            </member>
        <member name="M:KimonoCore.KimonoShapeText.DragBounds(SkiaSharp.SKPoint)">
             <summary>
             Drags the bounds of the text block.
             </summary>
             <param name="point">The <c>SKPoint</c> with the new location of the bounds.</param>
            </member>
        <member name="M:KimonoCore.KimonoShapeText.Clone">
             <summary>
             Clone this instance.
             </summary>
             <returns>The clone <c>KimonoShapeText</c>.</returns>
            </member>
        <member name="T:KimonoCore.KimonoPortfolio">
             <summary>
             A Kimono Portfolio holds a collection of <c>KimonoSketches</c>, <c>KimonoStyles</c> and <c>KimonoColors</c>
             that define a given Kimono Designer project.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoPortfolio._selectedSketch">
             <summary>
             The currently selected sketch.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoPortfolio.NewSketchNumber">
             <summary>
             Holds the number that will be assigned to the next new <c>KimonoSketch</c> created
             in this portfolio.
             </summary>
            </member>
        <member name="P:KimonoCore.KimonoPortfolio.UniqueID">
             <summary>
             Gets or sets the unique identifier.
             </summary>
             <value>The unique identifier.</value>
            </member>
        <member name="P:KimonoCore.KimonoPortfolio.Sketches">
             <summary>
             Gets or sets the sketches.
             </summary>
             <value>The sketches.</value>
            </member>
        <member name="P:KimonoCore.KimonoPortfolio.Styles">
             <summary>
             Gets or sets the styles.
             </summary>
             <value>The styles.</value>
            </member>
        <member name="P:KimonoCore.KimonoPortfolio.Colors">
             <summary>
             Gets or sets the colors.
             </summary>
             <value>The colors.</value>
            </member>
        <member name="P:KimonoCore.KimonoPortfolio.Gradients">
             <summary>
             Gets or sets the gradients.
             </summary>
             <value>The gradients.</value>
            </member>
        <member name="P:KimonoCore.KimonoPortfolio.SelectedSketch">
             <summary>
             Gets or sets the selected sketch.
             </summary>
             <value>The selected sketch.</value>
            </member>
        <member name="M:KimonoCore.KimonoPortfolio.#ctor(System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:KimonoCore.KimonoPortfolio" /> class.
             </summary>
             <param name="initialize">If <c>true</c>, the new instance will be initialized with the default values.</param>
             <remarks><c>initialize</c> is set to <c>false</c> when a clone is being made of given <c>KimonoPortfolio</c>.</remarks>
            </member>
        <member name="M:KimonoCore.KimonoPortfolio.Initialize">
             <summary>
             Initialize this instance.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoPortfolio.FindSketch(System.String)">
             <summary>
             Finds the given <c>KimonoSketch</c> by its Unique ID.
             </summary>
             <returns>The <c>KimonoSketch</c> if found, else <c>null</c>.</returns>
             <param name="uniqueID">Unique identifier.</param>
            </member>
        <member name="M:KimonoCore.KimonoPortfolio.FindColor(System.String)">
             <summary>
             Finds the given <c>KimonoColor</c> by its unique ID.
             </summary>
             <returns>The <c>KimonoColor</c> if found, else <c>null</c>.</returns>
             <param name="uniqueID">Unique identifier.</param>
            </member>
        <member name="M:KimonoCore.KimonoPortfolio.FindGradient(System.String)">
             <summary>
             Finds the gradient by its unique ID.
             </summary>
             <returns>The <c>KimonoGradient</c> if found, else <c>null</c>.</returns>
             <param name="uniqueID">Unique identifier.</param>
            </member>
        <member name="M:KimonoCore.KimonoPortfolio.FindStyle(System.String)">
             <summary>
             Finds the given <c>KimonoStyle</c> by its Unique ID.
             </summary>
             <returns>The <c>KimonoStyle</c> if found, else <c>null</c>.</returns>
             <param name="uniqueID">Unique identifier.</param>
            </member>
        <member name="M:KimonoCore.KimonoPortfolio.AddNewSketch">
             <summary>
             Adds the a new <c>KimonoSketch</c> to this portfolio.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoPortfolio.DuplicateSelectedSketch">
             <summary>
             Duplicates the selected sketch.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoPortfolio.DeleteSelectedSketch">
             <summary>
             Deletes the selected sketch.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoPortfolio.AddNewGradient">
             <summary>
             Adds the new gradient.
             </summary>
             <returns>The new gradient.</returns>
            </member>
        <member name="M:KimonoCore.KimonoPortfolio.AddNewColor">
             <summary>
             Adds a new <c>KimonoColor</c> to this portfolio.
             </summary>
             <returns>The new <c>KimonoColor</c>.</returns>
            </member>
        <member name="M:KimonoCore.KimonoPortfolio.AddNewColor(SkiaSharp.SKColor)">
             <summary>
             Adds a new <c>KimonoColor</c> to this portfolio based off of a given
             <c>SKColor</c>.
             </summary>
             <returns>The new <c>KimonoColor</c>.</returns>
             <param name="baseColor">Base color.</param>
            </member>
        <member name="M:KimonoCore.KimonoPortfolio.DuplicateColor(KimonoCore.KimonoColor)">
             <summary>
             Duplicates the given <c>KimonoColor</c> and adds it to the portfolio's collection
             of colors.
             </summary>
             <param name="color">The <c>KimonoColor</c> to duplicate.</param>
            </member>
        <member name="M:KimonoCore.KimonoPortfolio.DeleteColor(KimonoCore.KimonoColor)">
             <summary>
             Deletes the given <c>KimonoColor</c> from the portfolio.
             </summary>
             <param name="color">The <c>KimonoColor</c> to delete.</param>
            </member>
        <member name="M:KimonoCore.KimonoPortfolio.DeleteGradient(KimonoCore.KimonoGradient)">
             <summary>
             Deletes the given gradient from the portfolio.
             </summary>
             <param name="gradient">The <c>KimonoGradient</c> to delete.</param>
            </member>
        <member name="M:KimonoCore.KimonoPortfolio.AddNewStyle">
             <summary>
             Adds the a new <c>KimonoStyle</c> to the portfolio.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoPortfolio.DuplicateStyle(KimonoCore.KimonoStyle)">
             <summary>
             Duplicates the given <c>KimonoStyle</c> adding it to the portfolio's collection
             of styles.
             </summary>
             <param name="style">The <c>KimonoStyle</c> to duplicate.</param>
            </member>
        <member name="M:KimonoCore.KimonoPortfolio.ConvertSelectedShapeToStyle">
             <summary>
             Takes the custom <c>KimonoStyle</c> of the currently selected <c>KimonoShape</c>, converts
             it to a named, shared style and adds it to the portfolio's collection of styles.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoPortfolio.DeleteStyle(KimonoCore.KimonoStyle)">
             <summary>
             Deletes the given <c>KimonoStyle</c> from the portfolio's collection of styles.
             </summary>
             <param name="style">Style.</param>
            </member>
        <member name="M:KimonoCore.KimonoPortfolio.RelinkColors">
             <summary>
             Relinks the colors after a clone operation.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoPortfolio.RelinkGradient(KimonoCore.KimonoGradient)">
             <summary>
             Relinks the gradient after a clone operation.
             </summary>
             <param name="gradient">The <c>KimonoGradient</c> to relink.</param>
            </member>
        <member name="M:KimonoCore.KimonoPortfolio.RelinkStyle(KimonoCore.KimonoStyle)">
             <summary>
             Relinks the given <c>KimonoStyle</c> after a clone operation.
             </summary>
             <param name="style">The <c>KimonoStyle</c> to relink.</param>
            </member>
        <member name="M:KimonoCore.KimonoPortfolio.RelinkShape(KimonoCore.KimonoShape)">
             <summary>
             Relinks the given <c>KimonoShape</c> after a clone operation.
             </summary>
             <param name="shape">The <c>KimonoShape</c> to relink.</param>
            </member>
        <member name="M:KimonoCore.KimonoPortfolio.RelinkSketch(KimonoCore.KimonoSketch)">
             <summary>
             Relinks the given <c>KimonoSketch</c> after a clone operation.
             </summary>
             <param name="sketch">The <c>KimonoSketch</c> to relink.</param>
            </member>
        <member name="M:KimonoCore.KimonoPortfolio.Clone">
             <summary>
             Clone this instance.
             </summary>
             <returns>A deep clone of this <c>KimonoPortfolio</c>.</returns>
            </member>
        <member name="E:KimonoCore.KimonoPortfolio.RequestNewUndoPoint">
             <summary>
             Occurs when a new undo point is requested.
             </summary>
            </member>
        <member name="E:KimonoCore.KimonoPortfolio.SketchesModified">
             <summary>
             Occurs when sketches collection is modified.
             </summary>
            </member>
        <member name="E:KimonoCore.KimonoPortfolio.SelectedSketchWillChange">
             <summary>
             Occurs when selected sketch will change.
             </summary>
            </member>
        <member name="E:KimonoCore.KimonoPortfolio.SelectedSketchDidChange">
             <summary>
             Occurs when selected sketch did change.
             </summary>
            </member>
        <member name="E:KimonoCore.KimonoPortfolio.StylesModified">
             <summary>
             Occurs when styles collection is modified.
             </summary>
            </member>
        <member name="E:KimonoCore.KimonoPortfolio.SelectedShapeChanged">
             <summary>
             Occurs when selected shape changed.
             </summary>
            </member>
        <member name="E:KimonoCore.KimonoPortfolio.ColorsModified">
             <summary>
             Occurs when colors collection is modified.
             </summary>
            </member>
        <member name="E:KimonoCore.KimonoPortfolio.GradientsModified">
             <summary>
             Occurs when gradients collection is modified.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoPortfolio.RaiseGradientsModified(KimonoCore.KimonoGradient)">
             <summary>
             Raises the gradients modified event.
             </summary>
             <param name="gradient">The <c>KimonoGradient</c> that was modified.</param>
            </member>
        <member name="M:KimonoCore.KimonoPortfolio.RaiseRequestNewUndoPoint">
             <summary>
             Raises the request new undo point event.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoPortfolio.RaiseSketchesModified">
             <summary>
             Raises the sketches modified event.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoPortfolio.RaiseSelectedSketchWillChange(KimonoCore.KimonoSketch)">
             <summary>
             Raises the selected sketch will change event.
             </summary>
             <param name="sketch">The <c>KimonoSketch</c> that will change.</param>
            </member>
        <member name="M:KimonoCore.KimonoPortfolio.RaiseSelectedSketchDidChange(KimonoCore.KimonoSketch)">
             <summary>
             Raises the selected sketch did change event.
             </summary>
             <param name="sketch">The <c>KimonoSketch</c> that did change.</param>
            </member>
        <member name="M:KimonoCore.KimonoPortfolio.RaiseStylesModified(KimonoCore.KimonoStyle)">
             <summary>
             Raises the styles modified event.
             </summary>
             <param name="style">The <c>KimonoStyle</c> that was modified.</param>
            </member>
        <member name="M:KimonoCore.KimonoPortfolio.RaiseSelectedShapeChanged(KimonoCore.KimonoShape)">
             <summary>
             Raises the selected shape changed event.
             </summary>
             <param name="selected">The new <c>KimonoShape</c> that was selected.</param>
            </member>
        <member name="M:KimonoCore.KimonoPortfolio.RaiseColorsModified(KimonoCore.KimonoColor)">
             <summary>
             Raises the colors modified event.
             </summary>
             <param name="color">The <c>KimonoColor</c> that was modified.</param>
            </member>
        <member name="T:KimonoCore.KimonoShapeGroup">
             <summary>
             A <c>KimonoShapeGroup</c> holds a collection of <c>KimonoShapes</c> that can be acted
             upon as a group.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoShapeGroup.ShapeUnderConstruction">
             <summary>
             The shape under construction.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoShapeGroup._selectedShape">
             <summary>
             The currently selected shape.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoShapeGroup.Dragging">
             <summary>
             Marks if the group itself is being moved be the user.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoShapeGroup.IgnoreDrag">
             <summary>
             If <c>true</c>, the next drag event will be ignored.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoShapeGroup.PerformingDrag">
             <summary>
             If <c>true</c>, the user is performing a drag operation.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoShapeGroup.ToolDownAt">
             <summary>
             The last point that a <c>KimonoTool</c> went down on the sketch's Design
             Surface.
             </summary>
            </member>
        <member name="P:KimonoCore.KimonoShapeGroup.Parent">
             <summary>
             Gets or sets the parent <c>KimonoSketch</c> or <c>KimonoShapeGroup</c> that
             this <c>KimonoShapeGroup</c> belongs to.
             </summary>
             <value>The parent <c>KimonoSketch</c> or <c>KimonoShapeGroup</c>.</value>
            </member>
        <member name="P:KimonoCore.KimonoShapeGroup.ParentSketch">
             <summary>
             Gets the parent sketch by scanning backwards through the chain of parent
             objects until a <c>KimonoSketch</c> is reached.
             </summary>
             <value>The parent <c>KimonoSketch</c>.</value>
            </member>
        <member name="P:KimonoCore.KimonoShapeGroup.Path">
             <summary>
             Gets the full path from this group back to the parent <c>KimonoSketch</c>.
             </summary>
             <value>The path representing the nesting level of this group.</value>
            </member>
        <member name="P:KimonoCore.KimonoShapeGroup.Shapes">
             <summary>
             Gets or sets the shapes.
             </summary>
             <value>The shapes.</value>
            </member>
        <member name="P:KimonoCore.KimonoShapeGroup.SelectedShape">
             <summary>
             Gets or sets the selected shape.
             </summary>
             <value>The selected shape.</value>
            </member>
        <member name="P:KimonoCore.KimonoShapeGroup.DeeplySelectedShape">
             <summary>
             Gets the deepest selected shape in a chain of groups.
             </summary>
             <value>The deeply selected shape.</value>
            </member>
        <member name="P:KimonoCore.KimonoShapeGroup.DeeplySelectedGroup">
             <summary>
             Gets the deepest selected group in a chain of groups that is in the edit mode.
             </summary>
             <value>The deeply selected group.</value>
            </member>
        <member name="P:KimonoCore.KimonoShapeGroup.GroupType">
             <summary>
             Gets or sets the type of the group.
             </summary>
             <value>The type of the group as a <c>KimonoShapeGroupType</c>.</value>
            </member>
        <member name="P:KimonoCore.KimonoShapeGroup.Style">
             <summary>
             Gets or sets the style of this group.
             </summary>
             <value>The style as a <c>KimonoStyle</c>.</value>
            </member>
        <member name="P:KimonoCore.KimonoShapeGroup.Visible">
             <summary>
             Gets or sets a value indicating whether this <see cref="T:KimonoCore.KimonoShapeGroup" /> is visible.
             </summary>
             <value><c>true</c> if visible; otherwise, <c>false</c>.</value>
            </member>
        <member name="P:KimonoCore.KimonoShapeGroup.IsEditable">
             <summary>
             Gets a value indicating whether this <see cref="T:KimonoCore.KimonoShapeGroup" /> is editable.
             </summary>
             <value><c>true</c> if is editable; otherwise, <c>false</c>.</value>
            </member>
        <member name="P:KimonoCore.KimonoShapeGroup.SelectedShapeAtBottom">
             <summary>
             Gets a value indicating whether the selected shape is at the bottom.
             </summary>
             <value><c>true</c> if selected shape at bottom; otherwise, <c>false</c>.</value>
            </member>
        <member name="P:KimonoCore.KimonoShapeGroup.SelectedShapeAtTop">
             <summary>
             Gets a value indicating whether the selected shape is at the top.
             </summary>
             <value><c>true</c> if selected shape at top; otherwise, <c>false</c>.</value>
            </member>
        <member name="M:KimonoCore.KimonoShapeGroup.#ctor(System.Object)">
             <summary>
             Initializes a new instance of the <see cref="T:KimonoCore.KimonoShapeGroup" /> class.
             </summary>
             <param name="parent">The parent <c>KimonoSketch</c> or <c>KimonoShapeGroup</c>.</param>
            </member>
        <member name="M:KimonoCore.KimonoShapeGroup.#ctor(System.Object,System.Single,System.Single,System.Single,System.Single)">
             <summary>
             Initializes a new instance of the <see cref="T:KimonoCore.KimonoShapeGroup" /> class.
             </summary>
             <param name="parent">Parent.</param>
             <param name="left">Left.</param>
             <param name="top">Top.</param>
             <param name="right">Right.</param>
             <param name="bottom">Bottom.</param>
            </member>
        <member name="M:KimonoCore.KimonoShapeGroup.#ctor(System.Object,System.Single,System.Single,System.Single,System.Single,KimonoCore.KimonoShapeState)">
             <summary>
             Initializes a new instance of the <see cref="T:KimonoCore.KimonoShapeGroup" /> class.
             </summary>
             <param name="parent">Parent.</param>
             <param name="left">Left.</param>
             <param name="top">Top.</param>
             <param name="right">Right.</param>
             <param name="bottom">Bottom.</param>
             <param name="state">State.</param>
            </member>
        <member name="M:KimonoCore.KimonoShapeGroup.Initialize(System.Object)">
             <summary>
             Initialize the specified parent.
             </summary>
             <returns>The initialize.</returns>
             <param name="parent">Parent.</param>
            </member>
        <member name="M:KimonoCore.KimonoShapeGroup.FindShape(System.String)">
             <summary>
             Finds a given shape by its Unique ID.
             </summary>
             <returns>The <c>KimonoShape</c> if found, else <c>null</c>.</returns>
             <param name="uniqueID">Unique identifier.</param>
            </member>
        <member name="M:KimonoCore.KimonoShapeGroup.RecalculateGroupBounds">
             <summary>
             Recalculates the group bounds to encompass every <c>KimonoShape</c> inside this group.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoShapeGroup.ReturnToSketch">
             <summary>
             Returns to base parent <c>KimonoSketch</c> for this group.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoShapeGroup.SelectShape(KimonoCore.KimonoShape)">
             <summary>
             Selects the given <c>KimonoShape</c>.
             </summary>
             <param name="shape">Shape.</param>
            </member>
        <member name="M:KimonoCore.KimonoShapeGroup.RecalculateLayerDepths">
             <summary>
             Recalculates the layer depths.
             </summary>
             <remarks>Layer depths are used to maintain the front to back order of the
             <c>KimonoShapes</c> that for the sketch.</remarks>
            </member>
        <member name="M:KimonoCore.KimonoShapeGroup.MoveSelectedShapeToBottom">
             <summary>
             Moves the selected shape to bottom.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoShapeGroup.MoveSelectedShapeBackwards">
             <summary>
             Moves the selected shape backwards.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoShapeGroup.MoveSelectedShapeToTop">
             <summary>
             Moves the selected shape to top.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoShapeGroup.MoveSelectedShapeForwards">
             <summary>
             Moves the selected shape forwards.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoShapeGroup.AlignAllTop">
             <summary>
             Aligns all shapes in the group at the top.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoShapeGroup.AlignAllBottom">
             <summary>
             Aligns all shapes in the group at the bottom.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoShapeGroup.AlignAllLeft">
             <summary>
             Aligns all shapes in the group to the left.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoShapeGroup.AlignAllRight">
             <summary>
             Aligns all shapes in the group to the right.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoShapeGroup.AlignAllCenter">
             <summary>
             Centers all shapes in the group.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoShapeGroup.AlignAllCenterHorizontal">
             <summary>
             Center horizontal all shapes in the group.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoShapeGroup.AlignAllCenterVertical">
             <summary>
             Center vertical all shapes in the group.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoShapeGroup.DeleteColor(KimonoCore.KimonoColor)">
             <summary>
             Deletes the given <c>KimonoColor</c> from this group.
             </summary>
             <param name="color">The <c>KimonoColor</c> to delete.</param>
            </member>
        <member name="M:KimonoCore.KimonoShapeGroup.DeleteGradient(KimonoCore.KimonoGradient)">
             <summary>
             Deletes the given gradient from the group.
             </summary>
             <param name="gradient">The <c>KimonoGradient</c> to delete.</param>
            </member>
        <member name="M:KimonoCore.KimonoShapeGroup.AddShape(KimonoCore.KimonoShape)">
             <summary>
             Adds the given <c>KimonoShape</c> to the group if it isn't already
             a part of the group.
             </summary>
             <param name="shape">The <c>KimonoShape</c> to add.</param>
            </member>
        <member name="M:KimonoCore.KimonoShapeGroup.DuplicateSelectedShape">
             <summary>
             Duplicates the selected shape.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoShapeGroup.RemoveShape(KimonoCore.KimonoShape)">
             <summary>
             Removes the given <c>KimonoShape</c> from the group.
             </summary>
             <param name="shape">Shape.</param>
            </member>
        <member name="M:KimonoCore.KimonoShapeGroup.DeleteSelectedShape">
             <summary>
             Deletes the selected shape.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoShapeGroup.ShapeInGroup(KimonoCore.KimonoShape)">
             <summary>
             Test to see if the given <c>KimonoShape</c> is a part of this group.
             </summary>
             <returns><c>true</c>, if in shape is in the group, <c>false</c> otherwise.</returns>
             <param name="shape">The <c>KimonoShape</c> to test for.</param>
            </member>
        <member name="M:KimonoCore.KimonoShapeGroup.DeselectAll">
             <summary>
             Deselects all shapes in this group.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoShapeGroup.GroupShapes">
             <summary>
             Groups the shapes.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoShapeGroup.GroupShapes(KimonoCore.KimonoSketch)">
             <summary>
             Groups the shapes in the parent sketch.
             </summary>
             <param name="sketch">The parent <c>KimonoSketch</c>.</param>
            </member>
        <member name="M:KimonoCore.KimonoShapeGroup.GroupShapes(KimonoCore.KimonoShapeGroup)">
             <summary>
             Groups the shapes in the parent group.
             </summary>
             <param name="group">The parent <c>KimonoShapeGroup</c>.</param>
            </member>
        <member name="M:KimonoCore.KimonoShapeGroup.UngroupShapes">
             <summary>
             Ungroups the shapes in this group.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoShapeGroup.UngroupShapes(KimonoCore.KimonoSketch)">
             <summary>
             Ungroups the shapes in the parent sketch.
             </summary>
             <param name="sketch">The parent <c>KimonoSketch</c>.</param>
            </member>
        <member name="M:KimonoCore.KimonoShapeGroup.UngroupShapes(KimonoCore.KimonoShapeGroup)">
             <summary>
             Ungroups the shapes in the parent group.
             </summary>
             <param name="group">The parent <c>KimonoShapeGroup</c>.</param>
            </member>
        <member name="M:KimonoCore.KimonoShapeGroup.DuplicateShapes">
             <summary>
             Duplicates the shapes in a selection group.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoShapeGroup.DuplicateShapes(KimonoCore.KimonoSketch)">
             <summary>
             Duplicates the shapes in this selection group into the parent sketch.
             </summary>
             <param name="sketch">The parent <c>KimonoSketch</c>.</param>
            </member>
        <member name="M:KimonoCore.KimonoShapeGroup.DuplicateShapes(KimonoCore.KimonoShapeGroup)">
             <summary>
             Duplicates the shapes in this selection group into the parent group.
             </summary>
             <param name="group">The parent <c>KimonoShapeGroup</c>.</param>
            </member>
        <member name="M:KimonoCore.KimonoShapeGroup.DeleteShapes">
             <summary>
             Deletes the shapes in this selection group.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoShapeGroup.DeleteShapes(KimonoCore.KimonoSketch)">
             <summary>
             Deletes the shapes in this selection group from the parent sketch.
             </summary>
             <param name="sketch">The parent <c>KimonoSketch</c>.</param>
            </member>
        <member name="M:KimonoCore.KimonoShapeGroup.DeleteShapes(KimonoCore.KimonoShapeGroup)">
             <summary>
             Deletes the shapes in this selection group from the parent group.
             </summary>
             <param name="group">The parent <c>KimonoShapeGroup</c>.</param>
            </member>
        <member name="M:KimonoCore.KimonoShapeGroup.ApplyMoveAndScale">
             <summary>
             Applies the move and scale adjustments to all <c>KimonoShapes</c> inside this group.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoShapeGroup.Draw(SkiaSharp.SKCanvas)">
             <summary>
             Draw all the <c>KimonoShapes</c> that are part of this group into the given
             Skia canvas.
             </summary>
             <param name="canvas">The <c>SKCanvas</c> to draw into.</param>
            </member>
        <member name="M:KimonoCore.KimonoShapeGroup.StartEditing">
             <summary>
             Starts editing this group.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoShapeGroup.EndEditing">
             <summary>
             Ends editing this group.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoShapeGroup.PointInBound(SkiaSharp.SKPoint)">
             <summary>
             Test to see if the given point is inside the bounds of this group.
             </summary>
             <returns><c>true</c>, if the point was in bounds, <c>false</c> otherwise.</returns>
             <param name="point">The <c>SKPoint</c> to test for.</param>
            </member>
        <member name="M:KimonoCore.KimonoShapeGroup.DragBounds(SkiaSharp.SKPoint)">
             <summary>
             Drags the bounds of this group.
             </summary>
             <param name="point">The new location as a <c>SKPoint</c>.</param>
            </member>
        <member name="M:KimonoCore.KimonoShapeGroup.BoundsChanged">
             <summary>
             Update the bouds of this group when they have changed from either a move or a drag
             operation.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoShapeGroup.RelinkShape(KimonoCore.KimonoShape)">
             <summary>
             Relinks the shape after a clone operation.
             </summary>
             <param name="shape">The <c>KimonoShape</c> to relink.</param>
            </member>
        <member name="M:KimonoCore.KimonoShapeGroup.Clone">
             <summary>
             Clone this instance.
             </summary>
             <returns>A deep clone of this <c>KimonoShapeGroup</c>.</returns>
            </member>
        <member name="M:KimonoCore.KimonoShapeGroup.ToolDown(SkiaSharp.SKPoint,System.Int32,System.Boolean)">
             <summary>
             Handles the user placing the current <c>KimonoTool</c> down on the group's
             Design Surface.
             </summary>
             <param name="point">The <c>SKPoint</c> where the tool went down on the Design Surface.</param>
             <param name="clicks">The number of time the user clicked/tapped the tool down on the Design Surface.</param>
             <param name="multiSelect">If <c>true</c>, the user has started a multi-shape select process.</param>
            </member>
        <member name="T:KimonoCore.KimonoShapeGroupType">
             <summary>
             Defines the type of a <c>KimonoShapeGroup</c>.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoShapeGroupType.Selection">
             <summary>
             The group is a current active selection.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoShapeGroupType.DragSelect">
             <summary>
             The group is a drag to select selection that is underway.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoShapeGroupType.Collection">
             <summary>
             The group is a collection of shape that have been grouped
             together and are treated as a single object in the editor.
             </summary>
            </member>
        <member name="T:KimonoCore.KimonoUndoHandler">
             <summary>
             Handles the undo/redo state for a <c>KimonoDesignSurface</c>.
             </summary>
            </member>
        <member name="P:KimonoCore.KimonoUndoHandler.MaximumUndoPoints">
             <summary>
             Gets or sets the maximum undo points.
             </summary>
             <value>The maximum undo points.</value>
            </member>
        <member name="P:KimonoCore.KimonoUndoHandler.UndoStack">
             <summary>
             Gets or sets the undo stack.
             </summary>
             <value>The undo stack.</value>
            </member>
        <member name="P:KimonoCore.KimonoUndoHandler.RedoStack">
             <summary>
             Gets or sets the redo stack.
             </summary>
             <value>The redo stack.</value>
            </member>
        <member name="P:KimonoCore.KimonoUndoHandler.CanUndo">
             <summary>
             Gets a value indicating whether the user can undo their last action.
             </summary>
             <value><c>true</c> if can undo; otherwise, <c>false</c>.</value>
            </member>
        <member name="P:KimonoCore.KimonoUndoHandler.CanRedo">
             <summary>
             Gets a value indicating whether the user can redo their last action.
             </summary>
             <value><c>true</c> if can redo; otherwise, <c>false</c>.</value>
            </member>
        <member name="M:KimonoCore.KimonoUndoHandler.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:KimonoCore.KimonoUndoHandler" /> class.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoUndoHandler.PushUndoPoint(KimonoCore.KimonoPortfolio)">
             <summary>
             Pushes the undo point onto the stack.
             </summary>
             <param name="portfolio">The current state of the <c>KimonoPortfolio</c>.</param>
            </member>
        <member name="M:KimonoCore.KimonoUndoHandler.ReplaceLastUndoPoint(KimonoCore.KimonoPortfolio)">
             <summary>
             Replaces the last undo point with the one being passed in.
             </summary>
             <param name="portfolio">The current state of the <c>KimonoPortfolio</c>.</param>
            </member>
        <member name="M:KimonoCore.KimonoUndoHandler.PopUndoPoint(KimonoCore.KimonoPortfolio)">
             <summary>
             Pops the undo point off the stack.
             </summary>
             <returns>The prior state of the <c>KimonoPortfolio</c>.</returns>
             <param name="portfolio">The current state of the <c>KimonoPortfolio</c>.</param>
            </member>
        <member name="M:KimonoCore.KimonoUndoHandler.PopRedoPoint(KimonoCore.KimonoPortfolio)">
             <summary>
             Pops the redo point off the stack.
             </summary>
             <returns>The previous state of the <c>KimonoPortfolio</c>.</returns>
             <param name="portfolio">The current state of the <c>KimonoPortfolio</c>.</param>
            </member>
        <member name="E:KimonoCore.KimonoUndoHandler.UndoStateChanged">
             <summary>
             Occurs when undo state changed.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoUndoHandler.RaiseUndoStateChanged">
             <summary>
             Raises the undo state changed event.
             </summary>
            </member>
        <member name="T:KimonoCore.KimonoGradientType">
             <summary>
             Kimono gradient type.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoGradientType.LinearGradient">
             <summary>
             The linear gradient.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoGradientType.RadialGradient">
             <summary>
             The radial gradient.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoGradientType.SweepGradient">
             <summary>
             The sweep gradient.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoGradientType.ConicalGradient">
             <summary>
             The conical gradient.
             </summary>
            </member>
        <member name="T:KimonoCore.KimonoGradient">
             <summary>
             Defines a gradient as a collection of either <c>SKColor</c> or linked <c>KimonoColors</c>
             that can be applied to a <c>KimonoStyle</c> and used when drawing a <c>KimonoShape</c>.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoGradient._gradientType">
             <summary>
             The type of the gradient.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoGradient._startPoint">
             <summary>
             The start point.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoGradient._endPoint">
             <summary>
             The end point.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoGradient._radius">
             <summary>
             The radius for radial and conical gradients.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoGradient._tileMode">
             <summary>
             The gradient tile mode.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoGradient._selectedHandle">
             <summary>
             The selected handle.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoGradient.PerformingDrag">
             <summary>
             Is the user performing a drag operation.
             </summary>
            </member>
        <member name="P:KimonoCore.KimonoGradient.GradientType">
             <summary>
             Gets or sets the type of the gradient.
             </summary>
             <value>The type of the gradient.</value>
            </member>
        <member name="P:KimonoCore.KimonoGradient.UniqueID">
             <summary>
             Gets or sets the unique identifier.
             </summary>
             <value>The unique identifier.</value>
            </member>
        <member name="P:KimonoCore.KimonoGradient.Name">
             <summary>
             Gets or sets the name.
             </summary>
             <value>The name.</value>
            </member>
        <member name="P:KimonoCore.KimonoGradient.BarWidth">
             <summary>
             Gets or sets the width of the bar.
             </summary>
             <value>The width of the bar.</value>
            </member>
        <member name="P:KimonoCore.KimonoGradient.BarHeight">
             <summary>
             Gets or sets the height of the bar.
             </summary>
             <value>The height of the bar.</value>
            </member>
        <member name="P:KimonoCore.KimonoGradient.PreviewWidth">
             <summary>
             Gets or sets the width of the preview.
             </summary>
             <value>The width of the preview.</value>
            </member>
        <member name="P:KimonoCore.KimonoGradient.PreviewHeight">
             <summary>
             Gets or sets the height of the preview.
             </summary>
             <value>The height of the preview.</value>
            </member>
        <member name="P:KimonoCore.KimonoGradient.StartPoint">
             <summary>
             Gets or sets the start point.
             </summary>
             <value>The start point.</value>
            </member>
        <member name="P:KimonoCore.KimonoGradient.EndPoint">
             <summary>
             Gets or sets the end point.
             </summary>
             <value>The end point.</value>
            </member>
        <member name="P:KimonoCore.KimonoGradient.Radius">
             <summary>
             Gets or sets the radius used by radial and conical gradients.
             </summary>
             <value>The radius.</value>
            </member>
        <member name="P:KimonoCore.KimonoGradient.TileMode">
             <summary>
             Gets or sets the tile mode.
             </summary>
             <value>The tile mode.</value>
            </member>
        <member name="P:KimonoCore.KimonoGradient.ControlPoints">
             <summary>
             Gets or sets the control points that define the color.
             </summary>
             <value>The control points.</value>
            </member>
        <member name="P:KimonoCore.KimonoGradient.SelectedHandle">
             <summary>
             Gets or sets the selected handle.
             </summary>
             <value>The selected handle.</value>
            </member>
        <member name="P:KimonoCore.KimonoGradient.SelectedColor">
             <summary>
             Gets the color of the selected handle.
             </summary>
             <value>The color of the selected handle or black if no handle is selected.</value>
            </member>
        <member name="P:KimonoCore.KimonoGradient.Shader">
             <summary>
             Gets the Skia Shader that represents this gradient.
             </summary>
             <value>The <c>SKShader</c> for this gradient.</value>
            </member>
        <member name="M:KimonoCore.KimonoGradient.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:KimonoCore.KimonoGradient" /> class.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoGradient.#ctor(System.Single,System.Single)">
             <summary>
             Initializes a new instance of the <see cref="T:KimonoCore.KimonoGradient" /> class.
             </summary>
             <param name="barWidth">Bar width.</param>
             <param name="barHeight">Bar height.</param>
            </member>
        <member name="M:KimonoCore.KimonoGradient.#ctor(System.Single,System.Single,System.Single,System.Single)">
             <summary>
             Initializes a new instance of the <see cref="T:KimonoCore.KimonoGradient" /> class.
             </summary>
             <param name="barWidth">Bar width.</param>
             <param name="barHeight">Bar height.</param>
             <param name="previewWidth">Preview width.</param>
             <param name="previewHeight">Preview height.</param>
            </member>
        <member name="M:KimonoCore.KimonoGradient.Initialize">
             <summary>
             Initialize this instance.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoGradient.SortedColors">
             <summary>
             Returns a list of sorted colors by their "X" location inside the gradient.
             </summary>
             <returns>The sorted colors arrays.</returns>
            </member>
        <member name="M:KimonoCore.KimonoGradient.SortedWeights">
             <summary>
             Returns a list a color weights by their "X" location in the gradient.
             </summary>
             <returns>The sorted weights.</returns>
            </member>
        <member name="M:KimonoCore.KimonoGradient.ConformingShader(SkiaSharp.SKPoint,SkiaSharp.SKPoint)">
             <summary>
             Generates a shader that conforms to a given start and end point.
             </summary>
             <returns>The <c>SKShader</c> for the gradient bound to a given shape's dimentions.</returns>
             <param name="startPoint">Start point.</param>
             <param name="endPoint">End point.</param>
            </member>
        <member name="M:KimonoCore.KimonoGradient.AddControlPoint">
             <summary>
             Adds a new control point to the gradients collection and makes it the
             selected control point.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoGradient.DeleteSelectedControlPoint">
             <summary>
             Deletes the selected control point.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoGradient.DuplicateSelectedControlPoint">
             <summary>
             Duplicates the selected control point.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoGradient.FindHandle(System.String)">
             <summary>
             Finds the handle matching the given unique ID.
             </summary>
             <returns>The matching <c>KimonoHandle</c> or <c>null</c> if not found.</returns>
             <param name="uniqueID">Unique identifier.</param>
            </member>
        <member name="M:KimonoCore.KimonoGradient.DrawBar">
             <summary>
             Draws the bar.
             </summary>
             <returns>The bar.</returns>
            </member>
        <member name="M:KimonoCore.KimonoGradient.DrawPreview">
             <summary>
             Draws the preview.
             </summary>
             <returns>The preview.</returns>
            </member>
        <member name="M:KimonoCore.KimonoGradient.BarToolDown(SkiaSharp.SKPoint,System.Int32,System.Boolean)">
             <summary>
             Handles the user clicking a control point in the gradient design bar.
             </summary>
             <param name="point">The point the user clicked.</param>
             <param name="clicks">The number of times the user clicked.</param>
             <param name="multiSelect">If set to <c>true</c> multi select.</param>
            </member>
        <member name="M:KimonoCore.KimonoGradient.BarToolDrag(SkiaSharp.SKPoint)">
             <summary>
             Handles the user draging a control point in the gradient design bar. 
             </summary>
             <param name="point">The new location.</param>
            </member>
        <member name="M:KimonoCore.KimonoGradient.BarToolUp(SkiaSharp.SKPoint)">
             <summary>
             Handles the user releasing a control point in the gradient design bar.
             </summary>
             <param name="point">Point.</param>
            </member>
        <member name="M:KimonoCore.KimonoGradient.PreviewToolDown(SkiaSharp.SKPoint,System.Int32,System.Boolean)">
             <summary>
             Handles the user clicking a control point in the gradient preview.
             </summary>
             <param name="point">The point the user clicked.</param>
             <param name="clicks">The number of times the user clicked.</param>
             <param name="multiSelect">If set to <c>true</c> multi select.</param>
            </member>
        <member name="M:KimonoCore.KimonoGradient.PreviewToolDrag(SkiaSharp.SKPoint)">
             <summary>
             Handles the user draging a control point in the gradient preview. 
             </summary>
             <param name="point">The new location.</param>
            </member>
        <member name="M:KimonoCore.KimonoGradient.PreviewToolUp(SkiaSharp.SKPoint)">
             <summary>
             Handles the user releasing a control point in the gradient preview.
             </summary>
             <param name="point">Point.</param>
            </member>
        <member name="M:KimonoCore.KimonoGradient.Clone">
             <summary>
             Clone this instance.
             </summary>
             <returns>The clone.</returns>
            </member>
        <member name="E:KimonoCore.KimonoGradient.GradientModified">
             <summary>
             Occurs when the gradient is modified.
             </summary>
            </member>
        <member name="E:KimonoCore.KimonoGradient.HandleSelected">
             <summary>
             Occurs when a handle is selected.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoGradient.RaiseGradientModified">
             <summary>
             Raises the gradient modified event.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoGradient.RaiseHandleSelected(KimonoCore.KimonoHandle)">
             <summary>
             Raises the handle selected event.
             </summary>
             <param name="handle">Handle.</param>
            </member>
        <member name="T:KimonoCore.KimonoHandleType">
             <summary>
             Defines the type of a <c>KimonoHandle</c> that can be used as a general purpose
             control point to adjust the bounds of a <c>KimonoShape</c> or as a point for a
             vector or bezier object.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoHandleType.ControlPoint">
             <summary>
             A general purpose handle for a shape's bound or a control point on a 
             vector or bezier.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoHandleType.GradientColor">
             <summary>
             Defines a color inside of a gradient.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoHandleType.GradientPosition">
             <summary>
             Defines the position of a gradient in a shape object.
             </summary>
            </member>
        <member name="T:KimonoCore.KimonoBlur">
             <summary>
             Defines a blur effect that can be attached to the fill or the frame of a
             <c>KimonoShape</c>.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoBlur._horizontalBlurAmount">
             <summary>
             The horizontal blur amount.
             </summary>
            </member>
        <member name="F:KimonoCore.KimonoBlur._verticalBlurAmount">
             <summary>
             The vertical blur amount.
             </summary>
            </member>
        <member name="P:KimonoCore.KimonoBlur.HorizontalBlurAmount">
             <summary>
             Gets or sets the horizontal blur amount.
             </summary>
             <value>The horizontal blur amount.</value>
            </member>
        <member name="P:KimonoCore.KimonoBlur.VerticalBlurAmount">
             <summary>
             Gets or sets the vertical blur amount.
             </summary>
             <value>The vertical blur amount.</value>
            </member>
        <member name="P:KimonoCore.KimonoBlur.BlurFilter">
             <summary>
             Gets the blur filter represented by this blur effect.
             </summary>
             <value>The <c>SKImageFilter</c> for the blur filter.</value>
            </member>
        <member name="M:KimonoCore.KimonoBlur.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:KimonoCore.KimonoBlur" /> class.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoBlur.#ctor(System.Single,System.Single)">
             <summary>
             Initializes a new instance of the <see cref="T:KimonoCore.KimonoBlur" /> class.
             </summary>
             <param name="horizontalBlurAmount">Horizontal blur amount.</param>
             <param name="verticalBlurAmount">Vertical blur amount.</param>
            </member>
        <member name="M:KimonoCore.KimonoBlur.Clone">
             <summary>
             Clone this instance.
             </summary>
             <returns>The clone.</returns>
            </member>
        <member name="E:KimonoCore.KimonoBlur.BlurModified">
             <summary>
             Occurs when the blur is modified.
             </summary>
            </member>
        <member name="M:KimonoCore.KimonoBlur.RaiseBlurModified">
             <summary>
             Raises the blur modified event.
             </summary>
            </member>
    </members>
</doc>
